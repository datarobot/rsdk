% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partition.R
\docType{class}
\name{Partition}
\alias{Partition}
\title{Partition}
\format{
An \code{R6Class} generator object
}
\description{
Partition Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{cvHoldoutLevel}}{character If a user partition column was used with cross validation, the value assigned to the holdout set}

\item{\code{cvMethod}}{character The partitioning method used. Note that \"date\" partitioning is an old partitioning method no longer supported for new projects, as of API version v2.0.}

\item{\code{datetimeCol}}{character If a date partition column was used, the name of the column. Note that datetimeCol applies to an old partitioning method no longer supported for new projects, as of API version v2.0.}

\item{\code{datetimePartitionColumn}}{character \link{optional} If a datetime partition column was used, the name of the column.}

\item{\code{holdoutLevel}}{character If a user partition column was used with train-validation-holdout split, the value assigned to the holdout set.}

\item{\code{holdoutPct}}{numeric The percentage of the dataset reserved for the holdout set.}

\item{\code{partitionKeyCols}}{list( character ) An array containing a single string - the name of the group partition column}

\item{\code{reps}}{integer If cross validation was used, the number of folds to use.}

\item{\code{trainingLevel}}{character If a user partition column was used with train-validation-holdout split, the value assigned to the training set.}

\item{\code{useTimeSeries}}{character \link{optional} Indicates whether a time series project was created as opposed to a regular project using datetime partitioning.}

\item{\code{userPartitionCol}}{character If a user partition column was used, the name of the column.}

\item{\code{validationLevel}}{character If a user partition column was used with train-validation-holdout split, the value assigned to the validation set.}

\item{\code{validationPct}}{numeric If train-validation-holdout split was used, the percentage of the dataset used for the validation set.}

\item{\code{validationType}}{character The type of validation used.  Either CV (cross validation) or TVH (train-validation-holdout split).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Partition-new}{\code{Partition$new()}}
\item \href{#method-Partition-validate}{\code{Partition$validate()}}
\item \href{#method-Partition-toJSON}{\code{Partition$toJSON()}}
\item \href{#method-Partition-fromJSON}{\code{Partition$fromJSON()}}
\item \href{#method-Partition-clone}{\code{Partition$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Partition-new"></a>}}
\if{latex}{\out{\hypertarget{method-Partition-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Partition$new(
  cvHoldoutLevel = NULL,
  cvMethod = NULL,
  datetimeCol = NULL,
  holdoutLevel = NULL,
  holdoutPct = NULL,
  partitionKeyCols = NULL,
  reps = NULL,
  trainingLevel = NULL,
  userPartitionCol = NULL,
  validationLevel = NULL,
  validationPct = NULL,
  validationType = NULL,
  datetimePartitionColumn = NULL,
  useTimeSeries = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{cvHoldoutLevel}}{If a user partition column was used with cross validation, the value assigned to the holdout set}

\item{\code{cvMethod}}{The partitioning method used. Note that \"date\" partitioning is an old partitioning method no longer supported for new projects, as of API version v2.0.}

\item{\code{datetimeCol}}{If a date partition column was used, the name of the column. Note that datetimeCol applies to an old partitioning method no longer supported for new projects, as of API version v2.0.}

\item{\code{holdoutLevel}}{If a user partition column was used with train-validation-holdout split, the value assigned to the holdout set.}

\item{\code{holdoutPct}}{The percentage of the dataset reserved for the holdout set.}

\item{\code{partitionKeyCols}}{An array containing a single string - the name of the group partition column}

\item{\code{reps}}{If cross validation was used, the number of folds to use.}

\item{\code{trainingLevel}}{If a user partition column was used with train-validation-holdout split, the value assigned to the training set.}

\item{\code{userPartitionCol}}{If a user partition column was used, the name of the column.}

\item{\code{validationLevel}}{If a user partition column was used with train-validation-holdout split, the value assigned to the validation set.}

\item{\code{validationPct}}{If train-validation-holdout split was used, the percentage of the dataset used for the validation set.}

\item{\code{validationType}}{The type of validation used.  Either CV (cross validation) or TVH (train-validation-holdout split).}

\item{\code{datetimePartitionColumn}}{If a datetime partition column was used, the name of the column.}

\item{\code{useTimeSeries}}{Indicates whether a time series project was created as opposed to a regular project using datetime partitioning.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Partition-validate"></a>}}
\if{latex}{\out{\hypertarget{method-Partition-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Partition$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Partition-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Partition-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Partition$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Partition-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Partition-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Partition$fromJSON(PartitionJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{PartitionJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Partition-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Partition-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Partition$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
