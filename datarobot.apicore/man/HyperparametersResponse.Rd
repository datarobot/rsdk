% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hyperparameters_response.R
\docType{class}
\name{HyperparametersResponse}
\alias{HyperparametersResponse}
\title{HyperparametersResponse}
\format{
An \code{R6Class} generator object
}
\description{
HyperparametersResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{buildingBlocks}}{object Mathematical operators and other components that comprise Eureqa Expressions.}

\item{\code{errorMetric}}{character \link{optional} Error Metric Eureqa used internally, to evaluate which models to keep on its internal Pareto Front.}

\item{\code{maxGenerations}}{integer The maximum number of evolutionary generations to run.}

\item{\code{numThreads}}{integer The number of threads Eureqa will run with.}

\item{\code{priorSolutions}}{list( character ) Prior Eureqa Solutions.}

\item{\code{randomSeed}}{integer Constant to seed Eureqa's pseudo-random number generator.}

\item{\code{splitMode}}{character Whether to perform in-order (2) or random (1) splitting within the training set, for evolutionary re-training and re-validatoon.}

\item{\code{syncMigrations}}{character Whether Eureqa's migrations are synchronized.}

\item{\code{targetExpressionFormat}}{character Constrain the target expression to the specified format.}

\item{\code{targetExpressionString}}{character Eureqa Expression to constrain the form of the models that Eureqa will consider.}

\item{\code{timeoutSec}}{numeric The duration of time to run the Eureqa search algorithm for Eureqa will run until either of max_generations or timeout_sec is reached.}

\item{\code{trainingFraction}}{numeric The fraction of the DataRobot training data to use for Eureqa evolutionary training.}

\item{\code{trainingSplitExpr}}{character Valid Eureqa Expression to do Eureqa internal training splits.}

\item{\code{validationFraction}}{numeric The fraction of the DataRobot training data to use for Eureqa evolutionary validation.}

\item{\code{validationSplitExpr}}{character Valid Eureqa Expression to do Eureqa internal validation splits.}

\item{\code{weightExpr}}{character Eureqa Weight Expression.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{HyperparametersResponse$new()}}
\item \href{#method-validate}{\code{HyperparametersResponse$validate()}}
\item \href{#method-toJSON}{\code{HyperparametersResponse$toJSON()}}
\item \href{#method-fromJSON}{\code{HyperparametersResponse$fromJSON()}}
\item \href{#method-clone}{\code{HyperparametersResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HyperparametersResponse$new(
  buildingBlocks = NULL,
  maxGenerations = NULL,
  numThreads = NULL,
  priorSolutions = NULL,
  randomSeed = NULL,
  splitMode = NULL,
  syncMigrations = NULL,
  targetExpressionFormat = NULL,
  targetExpressionString = NULL,
  timeoutSec = NULL,
  trainingFraction = NULL,
  trainingSplitExpr = NULL,
  validationFraction = NULL,
  validationSplitExpr = NULL,
  weightExpr = NULL,
  errorMetric = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{buildingBlocks}}{Mathematical operators and other components that comprise Eureqa Expressions.}

\item{\code{maxGenerations}}{The maximum number of evolutionary generations to run.}

\item{\code{numThreads}}{The number of threads Eureqa will run with.}

\item{\code{priorSolutions}}{Prior Eureqa Solutions.}

\item{\code{randomSeed}}{Constant to seed Eureqa's pseudo-random number generator.}

\item{\code{splitMode}}{Whether to perform in-order (2) or random (1) splitting within the training set, for evolutionary re-training and re-validatoon.}

\item{\code{syncMigrations}}{Whether Eureqa's migrations are synchronized.}

\item{\code{targetExpressionFormat}}{Constrain the target expression to the specified format.}

\item{\code{targetExpressionString}}{Eureqa Expression to constrain the form of the models that Eureqa will consider.}

\item{\code{timeoutSec}}{The duration of time to run the Eureqa search algorithm for Eureqa will run until either of max_generations or timeout_sec is reached.}

\item{\code{trainingFraction}}{The fraction of the DataRobot training data to use for Eureqa evolutionary training.}

\item{\code{trainingSplitExpr}}{Valid Eureqa Expression to do Eureqa internal training splits.}

\item{\code{validationFraction}}{The fraction of the DataRobot training data to use for Eureqa evolutionary validation.}

\item{\code{validationSplitExpr}}{Valid Eureqa Expression to do Eureqa internal validation splits.}

\item{\code{weightExpr}}{Eureqa Weight Expression.}

\item{\code{errorMetric}}{Error Metric Eureqa used internally, to evaluate which models to keep on its internal Pareto Front.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HyperparametersResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HyperparametersResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HyperparametersResponse$fromJSON(
  HyperparametersResponseJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{HyperparametersResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HyperparametersResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
