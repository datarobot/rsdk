% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_blueprints_list_item.R
\docType{class}
\name{UserBlueprintsListItem}
\alias{UserBlueprintsListItem}
\title{UserBlueprintsListItem}
\format{
An \code{R6Class} generator object
}
\description{
UserBlueprintsListItem Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{blender}}{character Whether the blueprint is a blender.}

\item{\code{blueprintId}}{character The deterministic id of the blueprint, based on its content.}

\item{\code{customTaskVersionMetadata}}{list( \link{array[character]} ) \link{optional} An association of custom entity ids and task ids.}

\item{\code{decompressedFormat}}{character Whether the blueprint is in the decompressed format.}

\item{\code{diagram}}{character The diagram used by the UI to display the blueprint.}

\item{\code{features}}{list( character ) A list of the names of tasks used in the blueprint.}

\item{\code{featuresText}}{character A description of the blueprint via the names of tasks used.}

\item{\code{hexColumnNameLookup}}{list( \link{UserBlueprintsHexColumnNameLookupEntry} ) \link{optional} A lookup between hex values and data column names used in the blueprint.}

\item{\code{hiddenFromCatalog}}{character \link{optional} If true, the blueprint will not show up in the catalog}

\item{\code{icons}}{list( integer ) The icon(s) associated with the blueprint.}

\item{\code{insights}}{character An indication of the insights generated by the blueprint.}

\item{\code{isTimeSeries}}{character Whether the blueprint contains time-series tasks.}

\item{\code{linkedToProjectId}}{character \link{optional} Whether the user blueprint is linked to a project.}

\item{\code{modelType}}{character The generated or provided title of the blueprint.}

\item{\code{projectId}}{character \link{optional} The id of the project the blueprint was originally created with, if applicable.}

\item{\code{referenceModel}}{character Whether the blueprint is a reference model.}

\item{\code{shapSupport}}{character Whether the blueprint supports shapley additive explanations.}

\item{\code{supportedTargetTypes}}{list( character ) The list of supported targets of the current blueprint.}

\item{\code{supportsGpu}}{character Whether the blueprint supports execution on the GPU.}

\item{\code{supportsNewSeries}}{character \link{optional} Whether the blueprint supports new series.}

\item{\code{userBlueprintId}}{character The unique id associated with the user blueprint.}

\item{\code{userId}}{character The id of the user who owns the blueprint.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-UserBlueprintsListItem-new}{\code{UserBlueprintsListItem$new()}}
\item \href{#method-UserBlueprintsListItem-validate}{\code{UserBlueprintsListItem$validate()}}
\item \href{#method-UserBlueprintsListItem-toJSON}{\code{UserBlueprintsListItem$toJSON()}}
\item \href{#method-UserBlueprintsListItem-fromJSON}{\code{UserBlueprintsListItem$fromJSON()}}
\item \href{#method-UserBlueprintsListItem-clone}{\code{UserBlueprintsListItem$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserBlueprintsListItem-new"></a>}}
\if{latex}{\out{\hypertarget{method-UserBlueprintsListItem-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserBlueprintsListItem$new(
  blender = NULL,
  blueprintId = NULL,
  decompressedFormat = NULL,
  diagram = NULL,
  features = NULL,
  featuresText = NULL,
  icons = NULL,
  insights = NULL,
  isTimeSeries = NULL,
  modelType = NULL,
  referenceModel = NULL,
  shapSupport = NULL,
  supportedTargetTypes = NULL,
  supportsGpu = NULL,
  userBlueprintId = NULL,
  userId = NULL,
  customTaskVersionMetadata = NULL,
  hexColumnNameLookup = NULL,
  hiddenFromCatalog = NULL,
  linkedToProjectId = NULL,
  projectId = NULL,
  supportsNewSeries = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{blender}}{Whether the blueprint is a blender.}

\item{\code{blueprintId}}{The deterministic id of the blueprint, based on its content.}

\item{\code{decompressedFormat}}{Whether the blueprint is in the decompressed format.}

\item{\code{diagram}}{The diagram used by the UI to display the blueprint.}

\item{\code{features}}{A list of the names of tasks used in the blueprint.}

\item{\code{featuresText}}{A description of the blueprint via the names of tasks used.}

\item{\code{icons}}{The icon(s) associated with the blueprint.}

\item{\code{insights}}{An indication of the insights generated by the blueprint.}

\item{\code{isTimeSeries}}{Whether the blueprint contains time-series tasks.}

\item{\code{modelType}}{The generated or provided title of the blueprint.}

\item{\code{referenceModel}}{Whether the blueprint is a reference model.}

\item{\code{shapSupport}}{Whether the blueprint supports shapley additive explanations.}

\item{\code{supportedTargetTypes}}{The list of supported targets of the current blueprint.}

\item{\code{supportsGpu}}{Whether the blueprint supports execution on the GPU.}

\item{\code{userBlueprintId}}{The unique id associated with the user blueprint.}

\item{\code{userId}}{The id of the user who owns the blueprint.}

\item{\code{customTaskVersionMetadata}}{An association of custom entity ids and task ids.}

\item{\code{hexColumnNameLookup}}{A lookup between hex values and data column names used in the blueprint.}

\item{\code{hiddenFromCatalog}}{If true, the blueprint will not show up in the catalog}

\item{\code{linkedToProjectId}}{Whether the user blueprint is linked to a project.}

\item{\code{projectId}}{The id of the project the blueprint was originally created with, if applicable.}

\item{\code{supportsNewSeries}}{Whether the blueprint supports new series.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserBlueprintsListItem-validate"></a>}}
\if{latex}{\out{\hypertarget{method-UserBlueprintsListItem-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserBlueprintsListItem$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserBlueprintsListItem-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserBlueprintsListItem-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserBlueprintsListItem$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserBlueprintsListItem-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserBlueprintsListItem-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserBlueprintsListItem$fromJSON(
  UserBlueprintsListItemJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{UserBlueprintsListItemJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserBlueprintsListItem-clone"></a>}}
\if{latex}{\out{\hypertarget{method-UserBlueprintsListItem-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserBlueprintsListItem$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
