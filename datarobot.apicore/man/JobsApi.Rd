% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jobs_api.R
\docType{class}
\name{JobsApi}
\alias{JobsApi}
\title{Jobs operations}
\format{
An \code{R6Class} generator object
}
\description{
datarobot.apicore.Jobs
}
\examples{

## ------------------------------------------------
## Method `JobsApi$StatusDelete`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
statusId <- 'statusId_example' # character | The ID of the status object.

api.instance <- JobsApi$new()
result <- api.instance$StatusDelete(statusId)
}

## ------------------------------------------------
## Method `JobsApi$StatusList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | This many results will be skipped.
limit <- 0 # integer | At most this many results are returned. If 0, all results.

api.instance <- JobsApi$new()
result <- api.instance$StatusList(offset, limit)
}

## ------------------------------------------------
## Method `JobsApi$StatusRetrieve`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
statusId <- 'statusId_example' # character | The ID of the status object.

api.instance <- JobsApi$new()
result <- api.instance$StatusRetrieve(statusId)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-JobsApi-new}{\code{JobsApi$new()}}
\item \href{#method-JobsApi-StatusDelete}{\code{JobsApi$StatusDelete()}}
\item \href{#method-JobsApi-StatusList}{\code{JobsApi$StatusList()}}
\item \href{#method-JobsApi-StatusRetrieve}{\code{JobsApi$StatusRetrieve()}}
\item \href{#method-JobsApi-clone}{\code{JobsApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobsApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-JobsApi-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobsApi$new(apiClient)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{apiClient}}{A configurable \code{ApiClient} instance. If none provided, a new client with default configuration will be created.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobsApi-StatusDelete"></a>}}
\if{latex}{\out{\hypertarget{method-JobsApi-StatusDelete}{}}}
\subsection{Method \code{StatusDelete()}}{
Delete a task
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobsApi$StatusDelete(statusId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{statusId}}{character. The ID of the status object.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Destroy an async status object


This method invokes \verb{DELETE /status/\{statusId\}/} in the DataRobot Public API.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{204}} Successfully deleted
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
statusId <- 'statusId_example' # character | The ID of the status object.

api.instance <- JobsApi$new()
result <- api.instance$StatusDelete(statusId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobsApi-StatusList"></a>}}
\if{latex}{\out{\hypertarget{method-JobsApi-StatusList}{}}}
\subsection{Method \code{StatusList()}}{
List tasks
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobsApi$StatusList(offset, limit, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{integer. This many results will be skipped.}

\item{\code{limit}}{integer. At most this many results are returned. If 0, all results.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
List the async tasks that are currently running for your account


This method invokes \verb{GET /status/} in the DataRobot Public API.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} The list of statuses
\itemize{
}
}
}

\subsection{Returns}{
\link{StatusListResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | This many results will be skipped.
limit <- 0 # integer | At most this many results are returned. If 0, all results.

api.instance <- JobsApi$new()
result <- api.instance$StatusList(offset, limit)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobsApi-StatusRetrieve"></a>}}
\if{latex}{\out{\hypertarget{method-JobsApi-StatusRetrieve}{}}}
\subsection{Method \code{StatusRetrieve()}}{
Get task status
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobsApi$StatusRetrieve(statusId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{statusId}}{character. The ID of the status object.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Check the status of an asynchronous task such as project creation


This method invokes \verb{GET /status/\{statusId\}/} in the DataRobot Public API.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} The status of the asynchronous task
\itemize{
\item \strong{\code{Location}} A url that can be polled to check the status.
}
\item \strong{\code{303}} Task is completed, see Location header for the location of a new resource
\itemize{
}
}
}

\subsection{Returns}{
\link{StatusRetrieveResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
statusId <- 'statusId_example' # character | The ID of the status object.

api.instance <- JobsApi$new()
result <- api.instance$StatusRetrieve(statusId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-JobsApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-JobsApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JobsApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
