% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_driver_request.R
\docType{class}
\name{UpdateDriverRequest}
\alias{UpdateDriverRequest}
\title{UpdateDriverRequest}
\format{
An \code{R6Class} generator object
}
\description{
UpdateDriverRequest Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{baseNames}}{list( character ) \link{optional} Original file name(s) of the uploaded JAR file(s). If there are multiple JAR files required for the driver, each of the original file names should be present in the list in the same order as found in 'localJarUrls'}

\item{\code{canonicalName}}{character \link{optional} User-friendly driver name.}

\item{\code{className}}{character \link{optional} Driver class name. For example 'com.amazon.redshift.jdbc.Driver')}

\item{\code{configurationId}}{character \link{optional} Driver configuration ID if it was provided during driver upload.}

\item{\code{localJarUrls}}{list( character ) \link{optional} File path(s) for the driver files.This path is returned in the response as 'local_url' by the driverUpload route.If there are multiple JAR files required for the driver, each uploaded JAR must be present in this list. If specified, values will replace any previous settings.}

\item{\code{removeConfig}}{character \link{optional} Pass `True` to remove configuration currently associated with this driver. Note: must pass `canonicalName` and `className` if removing the configuration.}

\item{\code{skipConfigVerification}}{character \link{optional} Pass `True` to skip `jdbc_url` verification.}

\item{\code{version}}{character \link{optional} Driver version, which is used to construct the canonical name if driver configuration ID was provided during driver upload.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{UpdateDriverRequest$new()}}
\item \href{#method-validate}{\code{UpdateDriverRequest$validate()}}
\item \href{#method-toJSON}{\code{UpdateDriverRequest$toJSON()}}
\item \href{#method-fromJSON}{\code{UpdateDriverRequest$fromJSON()}}
\item \href{#method-clone}{\code{UpdateDriverRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UpdateDriverRequest$new(
  baseNames = NULL,
  canonicalName = NULL,
  className = NULL,
  configurationId = NULL,
  localJarUrls = NULL,
  removeConfig = NULL,
  skipConfigVerification = NULL,
  version = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{baseNames}}{Original file name(s) of the uploaded JAR file(s). If there are multiple JAR files required for the driver, each of the original file names should be present in the list in the same order as found in 'localJarUrls'}

\item{\code{canonicalName}}{User-friendly driver name.}

\item{\code{className}}{Driver class name. For example 'com.amazon.redshift.jdbc.Driver')}

\item{\code{configurationId}}{Driver configuration ID if it was provided during driver upload.}

\item{\code{localJarUrls}}{File path(s) for the driver files.This path is returned in the response as 'local_url' by the driverUpload route.If there are multiple JAR files required for the driver, each uploaded JAR must be present in this list. If specified, values will replace any previous settings.}

\item{\code{removeConfig}}{Pass `True` to remove configuration currently associated with this driver. Note: must pass `canonicalName` and `className` if removing the configuration.}

\item{\code{skipConfigVerification}}{Pass `True` to skip `jdbc_url` verification.}

\item{\code{version}}{Driver version, which is used to construct the canonical name if driver configuration ID was provided during driver upload.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UpdateDriverRequest$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UpdateDriverRequest$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UpdateDriverRequest$fromJSON(UpdateDriverRequestJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{UpdateDriverRequestJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UpdateDriverRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
