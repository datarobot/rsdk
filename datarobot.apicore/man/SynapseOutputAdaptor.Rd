% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synapse_output_adaptor.R
\docType{class}
\name{SynapseOutputAdaptor}
\alias{SynapseOutputAdaptor}
\title{SynapseOutputAdaptor}
\format{
An \code{R6Class} generator object
}
\description{
SynapseOutputAdaptor Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{cloudStorageCredentialId}}{\link{OneOfstringstring} \link{optional} Either the populated value of the field or \link{redacted} due to permission settings}

\item{\code{createTableIfNotExists}}{character \link{optional} Attempt to create the table first if no existing one is detected, before writing data with the strategy defined in the `statementType` parameter.}

\item{\code{credentialId}}{\link{OneOfstringstring} \link{optional} Either the populated value of the field or \link{redacted} due to permission settings}

\item{\code{dataStoreId}}{\link{OneOfstringstring} Either the populated value of the field or \link{redacted} due to permission settings}

\item{\code{externalDataSource}}{character External data source name}

\item{\code{schema}}{character \link{optional} The name of the specified database schema to write results to.}

\item{\code{statementType}}{character The statement type to use when writing the results.}

\item{\code{table}}{character The name of the specified database table to write results to.}

\item{\code{type}}{character Type name for this output type}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SynapseOutputAdaptor-new}{\code{SynapseOutputAdaptor$new()}}
\item \href{#method-SynapseOutputAdaptor-validate}{\code{SynapseOutputAdaptor$validate()}}
\item \href{#method-SynapseOutputAdaptor-toJSON}{\code{SynapseOutputAdaptor$toJSON()}}
\item \href{#method-SynapseOutputAdaptor-fromJSON}{\code{SynapseOutputAdaptor$fromJSON()}}
\item \href{#method-SynapseOutputAdaptor-clone}{\code{SynapseOutputAdaptor$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SynapseOutputAdaptor-new"></a>}}
\if{latex}{\out{\hypertarget{method-SynapseOutputAdaptor-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SynapseOutputAdaptor$new(
  dataStoreId = NULL,
  externalDataSource = NULL,
  statementType = NULL,
  table = NULL,
  type = NULL,
  cloudStorageCredentialId = NULL,
  createTableIfNotExists = FALSE,
  credentialId = NULL,
  schema = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dataStoreId}}{Either the populated value of the field or \link{redacted} due to permission settings}

\item{\code{externalDataSource}}{External data source name}

\item{\code{statementType}}{The statement type to use when writing the results.}

\item{\code{table}}{The name of the specified database table to write results to.}

\item{\code{type}}{Type name for this output type}

\item{\code{cloudStorageCredentialId}}{Either the populated value of the field or \link{redacted} due to permission settings}

\item{\code{createTableIfNotExists}}{Attempt to create the table first if no existing one is detected, before writing data with the strategy defined in the `statementType` parameter.}

\item{\code{credentialId}}{Either the populated value of the field or \link{redacted} due to permission settings}

\item{\code{schema}}{The name of the specified database schema to write results to.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SynapseOutputAdaptor-validate"></a>}}
\if{latex}{\out{\hypertarget{method-SynapseOutputAdaptor-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SynapseOutputAdaptor$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SynapseOutputAdaptor-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SynapseOutputAdaptor-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SynapseOutputAdaptor$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SynapseOutputAdaptor-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SynapseOutputAdaptor-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SynapseOutputAdaptor$fromJSON(SynapseOutputAdaptorJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{SynapseOutputAdaptorJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SynapseOutputAdaptor-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SynapseOutputAdaptor-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SynapseOutputAdaptor$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
