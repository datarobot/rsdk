% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/credentials_api.R
\docType{class}
\name{CredentialsApi}
\alias{CredentialsApi}
\title{Credentials operations}
\format{
An \code{R6Class} generator object
}
\description{
datarobot.apicore.Credentials
}
\examples{

## ------------------------------------------------
## Method `CredentialsApi$CredentialsAssociationsList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.
offset <- 0 # integer | Number of results to skip.
limit <- 100 # integer | At most this many results are returned. The default may change without notice.
types <- OneOfstringarray$new() # OneOfstringarray | Includes only credentials of the specified type. Repeat the parameter for filtering on multiple statuses.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsAssociationsList(credentialId, offset=offset, limit=limit, types=types)
}

## ------------------------------------------------
## Method `CredentialsApi$CredentialsAssociationsPatchMany`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.
credentialsAssociationUpdate <- CredentialsAssociationUpdate$new() # CredentialsAssociationUpdate |

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsAssociationsPatchMany(credentialId, credentialsAssociationUpdate=credentialsAssociationUpdate)
}

## ------------------------------------------------
## Method `CredentialsApi$CredentialsCreate`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
credentialsBody <- CredentialsBody$new() # CredentialsBody |

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsCreate(credentialsBody=credentialsBody)
}

## ------------------------------------------------
## Method `CredentialsApi$CredentialsDelete`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsDelete(credentialId)
}

## ------------------------------------------------
## Method `CredentialsApi$CredentialsList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | Number of results to skip.
limit <- 100 # integer | At most this many results are returned. The default may change without notice.
types <- OneOfstringarray$new() # OneOfstringarray | Includes only credentials of the specified type. Repeat the parameter for filtering on multiple statuses.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsList(offset=offset, limit=limit, types=types)
}

## ------------------------------------------------
## Method `CredentialsApi$CredentialsPatch`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.
credentialsUpdate <- CredentialsUpdate$new() # CredentialsUpdate |

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsPatch(credentialId, credentialsUpdate=credentialsUpdate)
}

## ------------------------------------------------
## Method `CredentialsApi$CredentialsRetrieve`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsRetrieve(credentialId)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{CredentialsApi$new()}}
\item \href{#method-CredentialsAssociationsList}{\code{CredentialsApi$CredentialsAssociationsList()}}
\item \href{#method-CredentialsAssociationsPatchMany}{\code{CredentialsApi$CredentialsAssociationsPatchMany()}}
\item \href{#method-CredentialsCreate}{\code{CredentialsApi$CredentialsCreate()}}
\item \href{#method-CredentialsDelete}{\code{CredentialsApi$CredentialsDelete()}}
\item \href{#method-CredentialsList}{\code{CredentialsApi$CredentialsList()}}
\item \href{#method-CredentialsPatch}{\code{CredentialsApi$CredentialsPatch()}}
\item \href{#method-CredentialsRetrieve}{\code{CredentialsApi$CredentialsRetrieve()}}
\item \href{#method-clone}{\code{CredentialsApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$new(apiClient)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{apiClient}}{A configurable \code{ApiClient} instance. If none provided, a new client with default configuration will be created.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CredentialsAssociationsList"></a>}}
\if{latex}{\out{\hypertarget{method-CredentialsAssociationsList}{}}}
\subsection{Method \code{CredentialsAssociationsList()}}{
List all objects associated with the specified credentials.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$CredentialsAssociationsList(
  credentialId,
  offset = 0,
  limit = 100,
  types = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{credentialId}}{character. Credentials entity ID.}

\item{\code{offset}}{integer. Number of results to skip.}

\item{\code{limit}}{integer. At most this many results are returned. The default may change without notice.}

\item{\code{types}}{\link{OneOfstringarray}. Includes only credentials of the specified type. Repeat the parameter for filtering on multiple statuses.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
List all objects associated with specified credentials for the current user.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} Objects associated with the specified credentials for the current user.
\itemize{
}
}
}

\subsection{Returns}{
\link{CredentialsListAssociationsResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.
offset <- 0 # integer | Number of results to skip.
limit <- 100 # integer | At most this many results are returned. The default may change without notice.
types <- OneOfstringarray$new() # OneOfstringarray | Includes only credentials of the specified type. Repeat the parameter for filtering on multiple statuses.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsAssociationsList(credentialId, offset=offset, limit=limit, types=types)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CredentialsAssociationsPatchMany"></a>}}
\if{latex}{\out{\hypertarget{method-CredentialsAssociationsPatchMany}{}}}
\subsection{Method \code{CredentialsAssociationsPatchMany()}}{
Add objects associated with credentials
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$CredentialsAssociationsPatchMany(
  credentialId,
  credentialsAssociationUpdate = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{credentialId}}{character. Credentials entity ID.}

\item{\code{credentialsAssociationUpdate}}{\link{CredentialsAssociationUpdate}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Add objects associated with credentials


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
\item \strong{\code{204}} Credentials association updated
\itemize{
}
\item \strong{\code{404}} Requested credentials not found
\itemize{
}
\item \strong{\code{409}} One or more associations already exists when adding or one or more associations do not exist
\itemize{
}
\item \strong{\code{422}} Must specify a field to update or must specify only one of `credentialsToAdd` or `credentialsToRemove`.
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.
credentialsAssociationUpdate <- CredentialsAssociationUpdate$new() # CredentialsAssociationUpdate |

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsAssociationsPatchMany(credentialId, credentialsAssociationUpdate=credentialsAssociationUpdate)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CredentialsCreate"></a>}}
\if{latex}{\out{\hypertarget{method-CredentialsCreate}{}}}
\subsection{Method \code{CredentialsCreate()}}{
Store a new set of credentials which can be used for data sources creation.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$CredentialsCreate(credentialsBody = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{credentialsBody}}{\link{CredentialsBody}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Store a new set of credentials.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{201}} Credentials stored successfully.
\itemize{
}
\item \strong{\code{409}} The specified name is already in use.
\itemize{
}
}
}

\subsection{Returns}{
\link{CreateCredentialsResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
credentialsBody <- CredentialsBody$new() # CredentialsBody |

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsCreate(credentialsBody=credentialsBody)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CredentialsDelete"></a>}}
\if{latex}{\out{\hypertarget{method-CredentialsDelete}{}}}
\subsection{Method \code{CredentialsDelete()}}{
Delete the credentials set.
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$CredentialsDelete(credentialId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{credentialId}}{character. Credentials entity ID.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Delete the credential set matching the specified ID if it is not used by any data connection or batch prediction job.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{204}} Credentials deleted successfully.
\itemize{
}
\item \strong{\code{409}} Credentials are in use by one or more data connections or batch prediction jobs.
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsDelete(credentialId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CredentialsList"></a>}}
\if{latex}{\out{\hypertarget{method-CredentialsList}{}}}
\subsection{Method \code{CredentialsList()}}{
List credentials.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$CredentialsList(offset = 0, limit = 100, types = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{integer. Number of results to skip.}

\item{\code{limit}}{integer. At most this many results are returned. The default may change without notice.}

\item{\code{types}}{\link{OneOfstringarray}. Includes only credentials of the specified type. Repeat the parameter for filtering on multiple statuses.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
List all sets of credentials available for given user.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} A paginated list of credentials.
\itemize{
}
}
}

\subsection{Returns}{
\link{CredentialsListResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | Number of results to skip.
limit <- 100 # integer | At most this many results are returned. The default may change without notice.
types <- OneOfstringarray$new() # OneOfstringarray | Includes only credentials of the specified type. Repeat the parameter for filtering on multiple statuses.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsList(offset=offset, limit=limit, types=types)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CredentialsPatch"></a>}}
\if{latex}{\out{\hypertarget{method-CredentialsPatch}{}}}
\subsection{Method \code{CredentialsPatch()}}{
Update specified credentials
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$CredentialsPatch(credentialId, credentialsUpdate = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{credentialId}}{character. Credentials entity ID.}

\item{\code{credentialsUpdate}}{\link{CredentialsUpdate}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Update specified credentials


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} Set of credentials updated
\itemize{
}
\item \strong{\code{404}} Requested credentials not found
\itemize{
}
\item \strong{\code{409}} The name specified for credentials is already in use.
\itemize{
}
\item \strong{\code{422}} Must specify at least one field to update
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.
credentialsUpdate <- CredentialsUpdate$new() # CredentialsUpdate |

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsPatch(credentialId, credentialsUpdate=credentialsUpdate)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CredentialsRetrieve"></a>}}
\if{latex}{\out{\hypertarget{method-CredentialsRetrieve}{}}}
\subsection{Method \code{CredentialsRetrieve()}}{
Retrieve the credentials set.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$CredentialsRetrieve(credentialId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{credentialId}}{character. Credentials entity ID.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Return the credential set matching the specified ID.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} Credentials retrieved successfully.
\itemize{
}
}
}

\subsection{Returns}{
\link{CreateCredentialsResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
credentialId <- 'credentialId_example' # character | Credentials entity ID.

api.instance <- CredentialsApi$new()
result <- api.instance$CredentialsRetrieve(credentialId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CredentialsApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
