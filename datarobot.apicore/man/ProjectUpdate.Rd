% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project_update.R
\docType{class}
\name{ProjectUpdate}
\alias{ProjectUpdate}
\title{ProjectUpdate}
\format{
An \code{R6Class} generator object
}
\description{
ProjectUpdate Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{gpuWorkerCount}}{integer \link{optional} The desired new number of gpu workers if the             number of gpu workers should be changed.             Must not exceed the number of gpu workers available to the user. `0` is allowed.             `-1` requests the maximum number available to the user.}

\item{\code{holdoutUnlocked}}{character \link{optional} If specified, the holdout will be unlocked;             note that the holdout cannot be relocked after unlocking}

\item{\code{projectDescription}}{character \link{optional} The new description of the project, if the description should be updated.}

\item{\code{projectName}}{character \link{optional} The new name of the project, if it should be renamed.}

\item{\code{workerCount}}{integer \link{optional} The desired new number of workers if the             number of workers should be changed.             Must not exceed the number of workers available to the user. `0` is allowed.             (New in version v2.14) `-1` requests the maximum number available to the user.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ProjectUpdate$new()}}
\item \href{#method-validate}{\code{ProjectUpdate$validate()}}
\item \href{#method-toJSON}{\code{ProjectUpdate$toJSON()}}
\item \href{#method-fromJSON}{\code{ProjectUpdate$fromJSON()}}
\item \href{#method-clone}{\code{ProjectUpdate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectUpdate$new(
  gpuWorkerCount = NULL,
  holdoutUnlocked = NULL,
  projectDescription = NULL,
  projectName = NULL,
  workerCount = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{gpuWorkerCount}}{The desired new number of gpu workers if the             number of gpu workers should be changed.             Must not exceed the number of gpu workers available to the user. `0` is allowed.             `-1` requests the maximum number available to the user.}

\item{\code{holdoutUnlocked}}{If specified, the holdout will be unlocked;             note that the holdout cannot be relocked after unlocking}

\item{\code{projectDescription}}{The new description of the project, if the description should be updated.}

\item{\code{projectName}}{The new name of the project, if it should be renamed.}

\item{\code{workerCount}}{The desired new number of workers if the             number of workers should be changed.             Must not exceed the number of workers available to the user. `0` is allowed.             (New in version v2.14) `-1` requests the maximum number available to the user.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectUpdate$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectUpdate$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectUpdate$fromJSON(ProjectUpdateJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ProjectUpdateJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProjectUpdate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
