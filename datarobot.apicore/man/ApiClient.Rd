% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_client.R
\docType{class}
\name{ApiClient}
\alias{ApiClient}
\title{ApiClient}
\format{
An \code{R6Class} generator object
}
\description{
ApiClient Class
}
\details{
A generic API client for accessing an OpenAPI. This client handles the client-server communication
communication, and is invariant across implementations. It was originally auto generated by OpenAPI
Generator (https://openapi-generator.tech) but is now static, and includes a few customizations
for the DataRobot API.
}
\examples{

## ------------------------------------------------
## Method `ApiClient$deserialize`
## ------------------------------------------------

\dontrun{
apiClient <- ApiClient$new()
apiClient$deserialize(resp, "CatalogExtendedDetailsResponse", loadNamespace("datarobot.apicore"))
}

## ------------------------------------------------
## Method `ApiClient$deserializeJSON`
## ------------------------------------------------

\dontrun{
apiClient <- ApiClient$new()
apiClient$deserializeJSON(resp, "CatalogExtendedDetailsResponse", loadNamespace("datarobot.apicore"))
}

## ------------------------------------------------
## Method `ApiClient$deserializeCSV`
## ------------------------------------------------

library(readr)
example_resp <- httr:::response(
  url = "/",
  status_code = 200L,
  headers = list(httr::content_type("text/csv")),
  content = charToRaw(readr::format_csv(mtcars))
)
apiClient <- ApiClient$new()
apiClient$deserializeCSV(example_resp)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{basePath}}{Base path for all requests. May be set by environment variable.}

\item{\code{userAgent}}{Default user agent in the HTTP request.}

\item{\code{defaultHeaders}}{Default HTTP headers to use with all API requests.}

\item{\code{username}}{Username for HTTP basic authentication. Unused.}

\item{\code{password}}{Password for HTTP basic authentication. Unused.}

\item{\code{apiKeys}}{API keys for HTTP token authentication. Unused.}

\item{\code{accessToken}}{Access token for HTTP token authentication. May be set by environment variable.}

\item{\code{timeout}}{Default timeout in seconds.}

\item{\code{retryStatusCodes}}{Vector of status codes to retry.}

\item{\code{maxRetryAttempts}}{Maximum number of retries for the status codes.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ApiClient$new()}}
\item \href{#method-CallApi}{\code{ApiClient$CallApi()}}
\item \href{#method-Execute}{\code{ApiClient$Execute()}}
\item \href{#method-DataRobotDefaultHeaders}{\code{ApiClient$DataRobotDefaultHeaders()}}
\item \href{#method-envEndpoint}{\code{ApiClient$envEndpoint()}}
\item \href{#method-envToken}{\code{ApiClient$envToken()}}
\item \href{#method-deserialize}{\code{ApiClient$deserialize()}}
\item \href{#method-deserializeJSON}{\code{ApiClient$deserializeJSON()}}
\item \href{#method-deserializeCSV}{\code{ApiClient$deserializeCSV()}}
\item \href{#method-deserializeObj}{\code{ApiClient$deserializeObj()}}
\item \href{#method-clone}{\code{ApiClient$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new ApiClient object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$new(
  basePath = NULL,
  userAgent = NULL,
  defaultHeaders = NULL,
  username = NULL,
  password = NULL,
  apiKeys = NULL,
  accessToken = NULL,
  timeout = NULL,
  retryStatusCodes = NULL,
  maxRetryAttempts = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{basePath}}{Base path for all requests. May be set by environment variable.}

\item{\code{userAgent}}{Default user agent in the HTTP request.}

\item{\code{defaultHeaders}}{Default HTTP headers to use with all API requests.}

\item{\code{username}}{Username for HTTP basic authentication. Unused.}

\item{\code{password}}{Password for HTTP basic authentication. Unused.}

\item{\code{apiKeys}}{API keys for HTTP token authentication. Unused.}

\item{\code{accessToken}}{Access token for HTTP token authentication. May be set by environment variable.}

\item{\code{timeout}}{Default timeout in seconds.}

\item{\code{retryStatusCodes}}{Vector of status codes to retry.}

\item{\code{maxRetryAttempts}}{Maximum number of retries for the status codes.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CallApi"></a>}}
\if{latex}{\out{\hypertarget{method-CallApi}{}}}
\subsection{Method \code{CallApi()}}{
Invokes the underlying API for this client, with automatic retry logic. All
params are passed to \code{\link[=Execute]{Execute()}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$CallApi(
  url,
  method,
  queryParams,
  headerParams,
  body,
  encode = "raw",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{The URL of the page to retrieve.}

\item{\code{method}}{The HTTP method for this request. Examples: "GET", "POST", etc.}

\item{\code{queryParams}}{A vector of named query parameters for this request. See \code{\link[httr:modify_url]{httr::modify_url()}} for more information.}

\item{\code{headerParams}}{A vector of named header parameters for this request. These should be exclusive of the list produced by \link{DataRobotDefaultHeaders}.}

\item{\code{body}}{The body for an HTTP request. It can be nearly anything, see \code{\link[httr:VERB]{httr::VERB()}} for more information.}

\item{\code{encode}}{How the body should be encoded. Options: "multipart", "form", "json", "raw". See \link{https://httr.r-lib.org/reference/POST.html} for more information.}

\item{\code{...}}{Further named parameters that may be passed on to the \code{httr} library. See \code{\link[httr:VERB]{httr::VERB()}} for more information.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Execute"></a>}}
\if{latex}{\out{\hypertarget{method-Execute}{}}}
\subsection{Method \code{Execute()}}{
Helper function that delegates to the \link{httr} library for making HTTP requests.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$Execute(
  url,
  method,
  queryParams,
  headerParams,
  body,
  encode = "raw",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{The URL of the page to retrieve.}

\item{\code{method}}{The HTTP method for this request. Examples: "GET", "POST", etc.}

\item{\code{queryParams}}{A vector of named query parameters for this request. See \code{\link[httr:modify_url]{httr::modify_url()}} for more information.}

\item{\code{headerParams}}{A vector of named header parameters for this request. These should be exclusive of the list produced by \link{DataRobotDefaultHeaders}.}

\item{\code{body}}{The body for an HTTP request. It can be nearly anything, see \code{\link[httr:VERB]{httr::VERB()}} for more information.}

\item{\code{encode}}{How the body should be encoded. Options: "multipart", "form", "json", "raw". By default, this is "raw" since by convention we pass in raw JSON strings. See \link{https://httr.r-lib.org/reference/POST.html} for more information.}

\item{\code{...}}{Further named parameters that may be passed on to the \code{httr} library. See \code{\link[httr:VERB]{httr::VERB()}} for more information.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DataRobotDefaultHeaders"></a>}}
\if{latex}{\out{\hypertarget{method-DataRobotDefaultHeaders}{}}}
\subsection{Method \code{DataRobotDefaultHeaders()}}{
Returns a list of default request headers for use with the DataRobot API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$DataRobotDefaultHeaders()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-envEndpoint"></a>}}
\if{latex}{\out{\hypertarget{method-envEndpoint}{}}}
\subsection{Method \code{envEndpoint()}}{
Retrieves the DataRobot API endpoint from environment variables. DataRobot generally expects this env var to be set.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$envEndpoint()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-envToken"></a>}}
\if{latex}{\out{\hypertarget{method-envToken}{}}}
\subsection{Method \code{envToken()}}{
Retrieves the DataRobot API token from environment variables. DataRobot generally expects this env var to be set.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$envToken()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserialize"></a>}}
\if{latex}{\out{\hypertarget{method-deserialize}{}}}
\subsection{Method \code{deserialize()}}{
Deserializes the content of an API response to the given type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$deserialize(resp, returnType = NULL, pkgEnv = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resp}}{An httr response object.}

\item{\code{returnType}}{The name of the returnType to attempt to deserialize to. Required for JSON content.}

\item{\code{pkgEnv}}{This package. Required for JSON content.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Depends on content type, response can be R6 instance (for application/json), a list (for text/csv), or a character vector (for text/html).
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
apiClient <- ApiClient$new()
apiClient$deserialize(resp, "CatalogExtendedDetailsResponse", loadNamespace("datarobot.apicore"))
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserializeJSON"></a>}}
\if{latex}{\out{\hypertarget{method-deserializeJSON}{}}}
\subsection{Method \code{deserializeJSON()}}{
Deserializes the JSON content of an API response to the given type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$deserializeJSON(resp, returnType, pkgEnv)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resp}}{An httr response object.}

\item{\code{returnType}}{The name of the returnType to attempt to deserialize to.}

\item{\code{pkgEnv}}{This package.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
apiClient <- ApiClient$new()
apiClient$deserializeJSON(resp, "CatalogExtendedDetailsResponse", loadNamespace("datarobot.apicore"))
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserializeCSV"></a>}}
\if{latex}{\out{\hypertarget{method-deserializeCSV}{}}}
\subsection{Method \code{deserializeCSV()}}{
Deserializes the CSV content of an API response.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$deserializeCSV(resp)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resp}}{An httr response object.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{library(readr)
example_resp <- httr:::response(
  url = "/",
  status_code = 200L,
  headers = list(httr::content_type("text/csv")),
  content = charToRaw(readr::format_csv(mtcars))
)
apiClient <- ApiClient$new()
apiClient$deserializeCSV(example_resp)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserializeObj"></a>}}
\if{latex}{\out{\hypertarget{method-deserializeObj}{}}}
\subsection{Method \code{deserializeObj()}}{
Deserialize the response from jsonlite object based on the given type
by handling complex and nested types by iterating recursively
Example returnTypes will be like "array\link{integer}", "map(Pet)", "array\link{map(Tag)}", etc.,
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$deserializeObj(obj, returnType, pkgEnv)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{obj}}{A JSON object, expected to have been retrieved from the content of an HTTP response.}

\item{\code{returnType}}{The name of the returnType to attempt to deserialize to.}

\item{\code{pkgEnv}}{This package.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ApiClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
