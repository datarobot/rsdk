% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sso_configuration_api.R
\docType{class}
\name{SsoConfigurationApi}
\alias{SsoConfigurationApi}
\title{SsoConfiguration operations}
\format{
An \code{R6Class} generator object
}
\description{
datarobot.apicore.SsoConfiguration
}
\examples{

## ------------------------------------------------
## Method `SsoConfigurationApi$SsoConfigurationsCreate`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
createSsoConfiguration <- CreateSsoConfiguration$new() # CreateSsoConfiguration |

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsCreate(createSsoConfiguration=createSsoConfiguration)
}

## ------------------------------------------------
## Method `SsoConfigurationApi$SsoConfigurationsList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | The number of records to skip over.
limit <- 100 # integer | The number of records to return.
orgId <- 'orgId_example' # character | The ID of the organization.

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsList(offset=offset, limit=limit, orgId=orgId)
}

## ------------------------------------------------
## Method `SsoConfigurationApi$SsoConfigurationsPatch`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
configurationId <- 'configurationId_example' # character | The ID of the organization to retrieve SSO config for.
updateSsoConfiguration <- UpdateSsoConfiguration$new() # UpdateSsoConfiguration |

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsPatch(configurationId, updateSsoConfiguration=updateSsoConfiguration)
}

## ------------------------------------------------
## Method `SsoConfigurationApi$SsoConfigurationsRetrieve`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
configurationId <- 'configurationId_example' # character | The ID of the organization to retrieve SSO config for.

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsRetrieve(configurationId)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SsoConfigurationApi$new()}}
\item \href{#method-SsoConfigurationsCreate}{\code{SsoConfigurationApi$SsoConfigurationsCreate()}}
\item \href{#method-SsoConfigurationsList}{\code{SsoConfigurationApi$SsoConfigurationsList()}}
\item \href{#method-SsoConfigurationsPatch}{\code{SsoConfigurationApi$SsoConfigurationsPatch()}}
\item \href{#method-SsoConfigurationsRetrieve}{\code{SsoConfigurationApi$SsoConfigurationsRetrieve()}}
\item \href{#method-clone}{\code{SsoConfigurationApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationApi$new(apiClient)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{apiClient}}{A configurable \code{ApiClient} instance. If none provided, a new client with default configuration will be created.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationsCreate"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationsCreate}{}}}
\subsection{Method \code{SsoConfigurationsCreate()}}{
Create an SSO configuration for a specific organization
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationApi$SsoConfigurationsCreate(createSsoConfiguration = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{createSsoConfiguration}}{\link{CreateSsoConfiguration}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Create an SSO configuration for a specific organization


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} Configuration created successfully
\itemize{
}
}
}

\subsection{Returns}{
\link{SsoConfigurationResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
createSsoConfiguration <- CreateSsoConfiguration$new() # CreateSsoConfiguration |

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsCreate(createSsoConfiguration=createSsoConfiguration)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationsList"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationsList}{}}}
\subsection{Method \code{SsoConfigurationsList()}}{
List sso configurations.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationApi$SsoConfigurationsList(
  offset = 0,
  limit = 100,
  orgId = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{integer. The number of records to skip over.}

\item{\code{limit}}{integer. The number of records to return.}

\item{\code{orgId}}{character. The ID of the organization.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
List the sso configurations that correspond to provided conditions.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} List of sso configurations.
\itemize{
}
}
}

\subsection{Returns}{
\link{ListSsoConfigurationResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | The number of records to skip over.
limit <- 100 # integer | The number of records to return.
orgId <- 'orgId_example' # character | The ID of the organization.

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsList(offset=offset, limit=limit, orgId=orgId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationsPatch"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationsPatch}{}}}
\subsection{Method \code{SsoConfigurationsPatch()}}{
Update an SSO configuration for a specific organization.
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationApi$SsoConfigurationsPatch(
  configurationId,
  updateSsoConfiguration = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{configurationId}}{character. The ID of the organization to retrieve SSO config for.}

\item{\code{updateSsoConfiguration}}{\link{UpdateSsoConfiguration}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Update an SSO configuration for a specific organization.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
configurationId <- 'configurationId_example' # character | The ID of the organization to retrieve SSO config for.
updateSsoConfiguration <- UpdateSsoConfiguration$new() # UpdateSsoConfiguration |

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsPatch(configurationId, updateSsoConfiguration=updateSsoConfiguration)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationsRetrieve"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationsRetrieve}{}}}
\subsection{Method \code{SsoConfigurationsRetrieve()}}{
Retrieve SSO configuration of a specific organization.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationApi$SsoConfigurationsRetrieve(configurationId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{configurationId}}{character. The ID of the organization to retrieve SSO config for.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Retrieve SSO configuration of a specific organization.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}} SSO configuration.
\itemize{
}
}
}

\subsection{Returns}{
\link{SsoConfigurationResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
configurationId <- 'configurationId_example' # character | The ID of the organization to retrieve SSO config for.

api.instance <- SsoConfigurationApi$new()
result <- api.instance$SsoConfigurationsRetrieve(configurationId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
