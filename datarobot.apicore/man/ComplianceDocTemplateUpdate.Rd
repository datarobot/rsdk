% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compliance_doc_template_update.R
\docType{class}
\name{ComplianceDocTemplateUpdate}
\alias{ComplianceDocTemplateUpdate}
\title{ComplianceDocTemplateUpdate}
\format{
An \code{R6Class} generator object
}
\description{
ComplianceDocTemplateUpdate Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{description}}{character \link{optional} New description for the template.}

\item{\code{labels}}{list( character ) \link{optional} Names of the labels to assign to the template.}

\item{\code{name}}{character \link{optional} New name for the template. Must be unique among templates created by the user.}

\item{\code{projectType}}{character \link{optional} Type of project template.}

\item{\code{sections}}{list( \link{OneOfSectionDataRobotSectionUserSectionCustomSectionTableOfContents} ) \link{optional} List of section objects representing the structure of the document. Each section can have sub-sections that have the same schema as the parent section, i.e., the structure is recursive. The number of nested sections allowed is 5. The total number of sections allowed is 500.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ComplianceDocTemplateUpdate-new}{\code{ComplianceDocTemplateUpdate$new()}}
\item \href{#method-ComplianceDocTemplateUpdate-validate}{\code{ComplianceDocTemplateUpdate$validate()}}
\item \href{#method-ComplianceDocTemplateUpdate-toJSON}{\code{ComplianceDocTemplateUpdate$toJSON()}}
\item \href{#method-ComplianceDocTemplateUpdate-fromJSON}{\code{ComplianceDocTemplateUpdate$fromJSON()}}
\item \href{#method-ComplianceDocTemplateUpdate-clone}{\code{ComplianceDocTemplateUpdate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComplianceDocTemplateUpdate-new"></a>}}
\if{latex}{\out{\hypertarget{method-ComplianceDocTemplateUpdate-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComplianceDocTemplateUpdate$new(
  description = NULL,
  labels = NULL,
  name = NULL,
  projectType = NULL,
  sections = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{description}}{New description for the template.}

\item{\code{labels}}{Names of the labels to assign to the template.}

\item{\code{name}}{New name for the template. Must be unique among templates created by the user.}

\item{\code{projectType}}{Type of project template.}

\item{\code{sections}}{List of section objects representing the structure of the document. Each section can have sub-sections that have the same schema as the parent section, i.e., the structure is recursive. The number of nested sections allowed is 5. The total number of sections allowed is 500.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComplianceDocTemplateUpdate-validate"></a>}}
\if{latex}{\out{\hypertarget{method-ComplianceDocTemplateUpdate-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComplianceDocTemplateUpdate$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComplianceDocTemplateUpdate-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ComplianceDocTemplateUpdate-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComplianceDocTemplateUpdate$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComplianceDocTemplateUpdate-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ComplianceDocTemplateUpdate-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComplianceDocTemplateUpdate$fromJSON(
  ComplianceDocTemplateUpdateJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ComplianceDocTemplateUpdateJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComplianceDocTemplateUpdate-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ComplianceDocTemplateUpdate-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComplianceDocTemplateUpdate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
