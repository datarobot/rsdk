% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sso_configuration_response.R
\docType{class}
\name{SsoConfigurationResponse}
\alias{SsoConfigurationResponse}
\title{SsoConfigurationResponse}
\format{
An \code{R6Class} generator object
}
\description{
SsoConfigurationResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{attributeMapping}}{\link{SamlAttributeMapping} \link{optional}}

\item{\code{autoGenerateUsers}}{character \link{optional} Determines if DataRobot automatically creates an account on first successful login via IdP if the user doesn't exist in the DataRobot application.}

\item{\code{certificate}}{\link{SamlCertificate} \link{optional}}

\item{\code{configurationType}}{character The type of the SSO configuration, defines the source of SSO metadata.             It can be one of the following: `METADATA` - when IDP metadata is provided in the             config, `METADATA_URL` - when an URL for metadata retrieval is provided in the config and             `MANUAL` - when IDP sign-on/sign-out URLs and certificate are provided.}

\item{\code{enableSso}}{character Defines if SSO is enabled.}

\item{\code{enforceSso}}{character Defines if SSO is enforced.}

\item{\code{entityId}}{character The globally unique identifier of the entity. Provided by IdP service.}

\item{\code{groupDelimiter}}{character \link{optional} A delimiter used to split IdP provided Group assertions if provided as a singledelimiter-separated list.}

\item{\code{groupMapping}}{list( \link{SamlGroupMappingResponse} ) \link{optional} The list of DataRobot group to identity provider group maps.}

\item{\code{id}}{character SSO configuration ID.}

\item{\code{idpMetadata}}{\link{SamlMetadataFile} \link{optional}}

\item{\code{idpMetadataHttpsVerify}}{character \link{optional} When idp_metadata_url uses HTTPS, require the server to have a trusted certificate.             To avoid security vulnerabilities, only set to False when a trusted server has a             self-signed certificate.}

\item{\code{idpMetadataUrl}}{character \link{optional} URL to the IdP SSO descriptor. Provided by IdP service.}

\item{\code{idpResponseMethod}}{character Identity provider response method, used to move user from IdP's authentication form back to the DataRobot side.}

\item{\code{issuer}}{character \link{optional} Optional Issuer field that may be required by IdP.}

\item{\code{name}}{character The name of the SSO configuration.}

\item{\code{organizationId}}{character \link{optional} The organization ID to which the SSO config belongs.}

\item{\code{roleDelimiter}}{character \link{optional} A delimiter used to split IdP provided Role assertions if provided as a singledelimiter-separated list.}

\item{\code{roleMapping}}{list( \link{SamlRoleMapping} ) \link{optional} The list of DataRobot access role to identity provider role maps.}

\item{\code{securityParameters}}{\link{SamlSecurityParameters} \link{optional}}

\item{\code{sessionLengthSeconds}}{integer Time window for the authentication session via IDP}

\item{\code{signOnUrl}}{character \link{optional} URL to sign on via SSO.}

\item{\code{signOutUrl}}{character \link{optional} URL to sign out via SSO.}

\item{\code{spRequestMethod}}{character Service provider (DataRobot application) request method, is used to move user to the IdP's authentication form.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SsoConfigurationResponse-new}{\code{SsoConfigurationResponse$new()}}
\item \href{#method-SsoConfigurationResponse-validate}{\code{SsoConfigurationResponse$validate()}}
\item \href{#method-SsoConfigurationResponse-toJSON}{\code{SsoConfigurationResponse$toJSON()}}
\item \href{#method-SsoConfigurationResponse-fromJSON}{\code{SsoConfigurationResponse$fromJSON()}}
\item \href{#method-SsoConfigurationResponse-clone}{\code{SsoConfigurationResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationResponse-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationResponse$new(
  configurationType = NULL,
  enableSso = NULL,
  enforceSso = NULL,
  entityId = NULL,
  id = NULL,
  idpResponseMethod = NULL,
  name = NULL,
  sessionLengthSeconds = NULL,
  spRequestMethod = NULL,
  attributeMapping = NULL,
  autoGenerateUsers = NULL,
  certificate = NULL,
  groupDelimiter = NULL,
  groupMapping = NULL,
  idpMetadata = NULL,
  idpMetadataHttpsVerify = NULL,
  idpMetadataUrl = NULL,
  issuer = NULL,
  organizationId = NULL,
  roleDelimiter = NULL,
  roleMapping = NULL,
  securityParameters = NULL,
  signOnUrl = NULL,
  signOutUrl = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{configurationType}}{The type of the SSO configuration, defines the source of SSO metadata.             It can be one of the following: `METADATA` - when IDP metadata is provided in the             config, `METADATA_URL` - when an URL for metadata retrieval is provided in the config and             `MANUAL` - when IDP sign-on/sign-out URLs and certificate are provided.}

\item{\code{enableSso}}{Defines if SSO is enabled.}

\item{\code{enforceSso}}{Defines if SSO is enforced.}

\item{\code{entityId}}{The globally unique identifier of the entity. Provided by IdP service.}

\item{\code{id}}{SSO configuration ID.}

\item{\code{idpResponseMethod}}{Identity provider response method, used to move user from IdP's authentication form back to the DataRobot side.}

\item{\code{name}}{The name of the SSO configuration.}

\item{\code{sessionLengthSeconds}}{Time window for the authentication session via IDP}

\item{\code{spRequestMethod}}{Service provider (DataRobot application) request method, is used to move user to the IdP's authentication form.}

\item{\code{autoGenerateUsers}}{Determines if DataRobot automatically creates an account on first successful login via IdP if the user doesn't exist in the DataRobot application.}

\item{\code{groupDelimiter}}{A delimiter used to split IdP provided Group assertions if provided as a singledelimiter-separated list.}

\item{\code{groupMapping}}{The list of DataRobot group to identity provider group maps.}

\item{\code{idpMetadataHttpsVerify}}{When idp_metadata_url uses HTTPS, require the server to have a trusted certificate.             To avoid security vulnerabilities, only set to False when a trusted server has a             self-signed certificate.}

\item{\code{idpMetadataUrl}}{URL to the IdP SSO descriptor. Provided by IdP service.}

\item{\code{issuer}}{Optional Issuer field that may be required by IdP.}

\item{\code{organizationId}}{The organization ID to which the SSO config belongs.}

\item{\code{roleDelimiter}}{A delimiter used to split IdP provided Role assertions if provided as a singledelimiter-separated list.}

\item{\code{roleMapping}}{The list of DataRobot access role to identity provider role maps.}

\item{\code{signOnUrl}}{URL to sign on via SSO.}

\item{\code{signOutUrl}}{URL to sign out via SSO.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationResponse-validate"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationResponse-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationResponse$fromJSON(
  SsoConfigurationResponseJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{SsoConfigurationResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SsoConfigurationResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SsoConfigurationResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SsoConfigurationResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
