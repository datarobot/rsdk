% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_license_retrieve_response_license.R
\docType{class}
\name{ClusterLicenseRetrieveResponseLicense}
\alias{ClusterLicenseRetrieveResponseLicense}
\title{ClusterLicenseRetrieveResponseLicense}
\format{
An \code{R6Class} generator object
}
\description{
ClusterLicenseRetrieveResponseLicense Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concurrentWorkersCount}}{integer The number of allowed simultaneously running jobs(concurrent workers)}

\item{\code{expirationTimestamp}}{character The time of the license expiration in UTC ISO format,ex. 2020-12-21T23:59:59.000000Z}

\item{\code{expired}}{character A value indicating whether the license has already expired}

\item{\code{featureFlags}}{named list( \link{FeatureFlagObject} ) An object containing enforced feature flags. Each key is a name of a feature flag and value is an object described below.}

\item{\code{maxDeploymentLimit}}{integer The number of maximum deployments limit (0: unlimited)}

\item{\code{maximumActiveUsers}}{integer The number of maximum active users allowed in the system(0: unlimited}

\item{\code{prepaidDeploymentLimit}}{integer The number of prepaid deployments limit (0: unlimited)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ClusterLicenseRetrieveResponseLicense$new()}}
\item \href{#method-validate}{\code{ClusterLicenseRetrieveResponseLicense$validate()}}
\item \href{#method-toJSON}{\code{ClusterLicenseRetrieveResponseLicense$toJSON()}}
\item \href{#method-fromJSON}{\code{ClusterLicenseRetrieveResponseLicense$fromJSON()}}
\item \href{#method-clone}{\code{ClusterLicenseRetrieveResponseLicense$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClusterLicenseRetrieveResponseLicense$new(
  concurrentWorkersCount = NULL,
  expirationTimestamp = NULL,
  expired = NULL,
  featureFlags = NULL,
  maxDeploymentLimit = NULL,
  maximumActiveUsers = NULL,
  prepaidDeploymentLimit = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concurrentWorkersCount}}{The number of allowed simultaneously running jobs(concurrent workers)}

\item{\code{expirationTimestamp}}{The time of the license expiration in UTC ISO format,ex. 2020-12-21T23:59:59.000000Z}

\item{\code{expired}}{A value indicating whether the license has already expired}

\item{\code{featureFlags}}{An object containing enforced feature flags. Each key is a name of a feature flag and value is an object described below.}

\item{\code{maxDeploymentLimit}}{The number of maximum deployments limit (0: unlimited)}

\item{\code{maximumActiveUsers}}{The number of maximum active users allowed in the system(0: unlimited}

\item{\code{prepaidDeploymentLimit}}{The number of prepaid deployments limit (0: unlimited)}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClusterLicenseRetrieveResponseLicense$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClusterLicenseRetrieveResponseLicense$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClusterLicenseRetrieveResponseLicense$fromJSON(
  ClusterLicenseRetrieveResponseLicenseJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ClusterLicenseRetrieveResponseLicenseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClusterLicenseRetrieveResponseLicense$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
