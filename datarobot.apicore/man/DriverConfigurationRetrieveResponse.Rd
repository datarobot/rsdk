% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/driver_configuration_retrieve_response.R
\docType{class}
\name{DriverConfigurationRetrieveResponse}
\alias{DriverConfigurationRetrieveResponse}
\title{DriverConfigurationRetrieveResponse}
\format{
An \code{R6Class} generator object
}
\description{
DriverConfigurationRetrieveResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{associatedAuthTypes}}{list( character ) List of authentication types supported by this driver configuration.}

\item{\code{className}}{character Java class name of the driver to be used (e.g., org.postgresql.Driver).}

\item{\code{creator}}{character User ID of the creator of this configuration.}

\item{\code{id}}{character Driver configuration ID}

\item{\code{jdbcFieldSchemas}}{\link{JDBCFieldSchemas}}

\item{\code{jdbcUrlPathDelimiter}}{character Separator of address from path in the JDBC URL (e.g., \"/\").}

\item{\code{jdbcUrlPrefix}}{character Prefix of the JDBC URL (e.g., \"jdbc:mssql://\" or \"jdbc:oracle:thin:@\").}

\item{\code{jdbcUrlQueryDelimiter}}{character Separator of path from the list of query parameters in the JDBC URL (e.g., \"?\").}

\item{\code{jdbcUrlQueryParamDelimiter}}{character Separator of each set of query parameter key-value pairs in the JDBC URL (e.g., \"&\").}

\item{\code{jdbcUrlQueryParamKeyValueDelimiter}}{character Separator of the key and value in a query parameter pair (e.g., \"=\").}

\item{\code{standardizedName}}{character Plain text name for the driver (e.g., PostgreSQL).}

\item{\code{statements}}{list( character ) \link{optional} List of supported statments for this driver configuration.}

\item{\code{updated}}{character ISO-8601 formatted time/date when this configuration was most recently updated.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DriverConfigurationRetrieveResponse-new}{\code{DriverConfigurationRetrieveResponse$new()}}
\item \href{#method-DriverConfigurationRetrieveResponse-validate}{\code{DriverConfigurationRetrieveResponse$validate()}}
\item \href{#method-DriverConfigurationRetrieveResponse-toJSON}{\code{DriverConfigurationRetrieveResponse$toJSON()}}
\item \href{#method-DriverConfigurationRetrieveResponse-fromJSON}{\code{DriverConfigurationRetrieveResponse$fromJSON()}}
\item \href{#method-DriverConfigurationRetrieveResponse-clone}{\code{DriverConfigurationRetrieveResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DriverConfigurationRetrieveResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-DriverConfigurationRetrieveResponse-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DriverConfigurationRetrieveResponse$new(
  associatedAuthTypes = NULL,
  className = NULL,
  creator = NULL,
  id = NULL,
  jdbcFieldSchemas = NULL,
  jdbcUrlPathDelimiter = NULL,
  jdbcUrlPrefix = NULL,
  jdbcUrlQueryDelimiter = NULL,
  jdbcUrlQueryParamDelimiter = NULL,
  jdbcUrlQueryParamKeyValueDelimiter = NULL,
  standardizedName = NULL,
  updated = NULL,
  statements = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{associatedAuthTypes}}{List of authentication types supported by this driver configuration.}

\item{\code{className}}{Java class name of the driver to be used (e.g., org.postgresql.Driver).}

\item{\code{creator}}{User ID of the creator of this configuration.}

\item{\code{id}}{Driver configuration ID}

\item{\code{jdbcUrlPathDelimiter}}{Separator of address from path in the JDBC URL (e.g., \"/\").}

\item{\code{jdbcUrlPrefix}}{Prefix of the JDBC URL (e.g., \"jdbc:mssql://\" or \"jdbc:oracle:thin:@\").}

\item{\code{jdbcUrlQueryDelimiter}}{Separator of path from the list of query parameters in the JDBC URL (e.g., \"?\").}

\item{\code{jdbcUrlQueryParamDelimiter}}{Separator of each set of query parameter key-value pairs in the JDBC URL (e.g., \"&\").}

\item{\code{jdbcUrlQueryParamKeyValueDelimiter}}{Separator of the key and value in a query parameter pair (e.g., \"=\").}

\item{\code{standardizedName}}{Plain text name for the driver (e.g., PostgreSQL).}

\item{\code{updated}}{ISO-8601 formatted time/date when this configuration was most recently updated.}

\item{\code{statements}}{List of supported statments for this driver configuration.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DriverConfigurationRetrieveResponse-validate"></a>}}
\if{latex}{\out{\hypertarget{method-DriverConfigurationRetrieveResponse-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DriverConfigurationRetrieveResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DriverConfigurationRetrieveResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DriverConfigurationRetrieveResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DriverConfigurationRetrieveResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DriverConfigurationRetrieveResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DriverConfigurationRetrieveResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DriverConfigurationRetrieveResponse$fromJSON(
  DriverConfigurationRetrieveResponseJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{DriverConfigurationRetrieveResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DriverConfigurationRetrieveResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DriverConfigurationRetrieveResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DriverConfigurationRetrieveResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
