% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_job_response.R
\docType{class}
\name{ModelJobResponse}
\alias{ModelJobResponse}
\title{ModelJobResponse}
\format{
An \code{R6Class} generator object
}
\description{
ModelJobResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{blueprintId}}{character The blueprint used by the model - note that this is not an ObjectId.}

\item{\code{featurelistId}}{character The ID of the featurelist the model is using.}

\item{\code{id}}{character The job ID.}

\item{\code{isBlocked}}{character True if a job is waiting for its dependencies to be resolved first.}

\item{\code{modelCategory}}{character Indicates what kind of model this is. Will be ``combined`` for combined models.}

\item{\code{modelId}}{character The ID of the model}

\item{\code{modelType}}{character The type of model used by the job.}

\item{\code{processes}}{list( character ) List of processes the modeling job includes}

\item{\code{projectId}}{character The project the job belongs to.}

\item{\code{samplePct}}{numeric The percentage of the dataset the job is using.}

\item{\code{status}}{character The status of the job.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ModelJobResponse$new()}}
\item \href{#method-validate}{\code{ModelJobResponse$validate()}}
\item \href{#method-toJSON}{\code{ModelJobResponse$toJSON()}}
\item \href{#method-fromJSON}{\code{ModelJobResponse$fromJSON()}}
\item \href{#method-clone}{\code{ModelJobResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelJobResponse$new(
  blueprintId = NULL,
  featurelistId = NULL,
  id = NULL,
  isBlocked = NULL,
  modelCategory = NULL,
  modelId = NULL,
  modelType = NULL,
  processes = NULL,
  projectId = NULL,
  samplePct = NULL,
  status = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{blueprintId}}{The blueprint used by the model - note that this is not an ObjectId.}

\item{\code{featurelistId}}{The ID of the featurelist the model is using.}

\item{\code{id}}{The job ID.}

\item{\code{isBlocked}}{True if a job is waiting for its dependencies to be resolved first.}

\item{\code{modelCategory}}{Indicates what kind of model this is. Will be ``combined`` for combined models.}

\item{\code{modelId}}{The ID of the model}

\item{\code{modelType}}{The type of model used by the job.}

\item{\code{processes}}{List of processes the modeling job includes}

\item{\code{projectId}}{The project the job belongs to.}

\item{\code{samplePct}}{The percentage of the dataset the job is using.}

\item{\code{status}}{The status of the job.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelJobResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelJobResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelJobResponse$fromJSON(ModelJobResponseJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ModelJobResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelJobResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
