% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_case_api.R
\docType{class}
\name{UseCaseApi}
\alias{UseCaseApi}
\title{UseCase operations}
\format{
An \code{R6Class} generator object
}
\description{
datarobot.apicore.UseCase
}
\examples{

## ------------------------------------------------
## Method `UseCaseApi$UseCaseValueTemplatesCalculationList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
accuracyImprovement <- 3.4 # numeric | Accuracy improvement
decisionsCount <- 56 # integer | Estimated number of decisions per year
templateType <- 'templateType_example' # character | The name of the use case value template to be retrieved
incorrectDecisionsCount <- 56 # integer | Estimated number of incorrect decisions per year. Required for templateType CLASSIFICATION
incorrectDecisionCost <- 3.4 # numeric | Estimated cost of an individual incorrect decision. Required for templateType CLASSIFICATION
targetValue <- 3.4 # numeric | Target value. Required for templateType REGRESSION

api.instance <- UseCaseApi$new()
result <- api.instance$UseCaseValueTemplatesCalculationList(accuracyImprovement, decisionsCount, templateType, incorrectDecisionsCount=incorrectDecisionsCount, incorrectDecisionCost=incorrectDecisionCost, targetValue=targetValue)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCaseValueTemplatesList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)

api.instance <- UseCaseApi$new()
result <- api.instance$UseCaseValueTemplatesList()
}

## ------------------------------------------------
## Method `UseCaseApi$UseCaseValueTemplatesRetrieve`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
templateType <- 'templateType_example' # character | The name of the use case value template to be retrieved

api.instance <- UseCaseApi$new()
result <- api.instance$UseCaseValueTemplatesRetrieve(templateType)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesActivitiesList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
offset <- 0 # integer | The number of records to skip over. Default 0.
limit <- 100 # integer | The number of records to return in the range from 1 to 100. Default 100.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesActivitiesList(useCaseId, offset=offset, limit=limit)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesAttachmentsCreate`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
createUseCaseAttachment <- CreateUseCaseAttachment$new() # CreateUseCaseAttachment |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsCreate(useCaseId, createUseCaseAttachment=createUseCaseAttachment)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesAttachmentsDelete`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
attachmentId <- 'attachmentId_example' # character | The id of the attachment

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsDelete(useCaseId, attachmentId)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesAttachmentsList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
offset <- 0 # integer | This many results will be skipped
limit <- 100 # integer | This many results are returned
type <- 'type_example' # character | Use case attachment type

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsList(useCaseId, offset=offset, limit=limit, type=type)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesAttachmentsRetrieve`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
attachmentId <- 'attachmentId_example' # character | The id of the attachment

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsRetrieve(useCaseId, attachmentId)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesCreate`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCase <- UseCase$new() # UseCase |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesCreate(useCase=useCase)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesDelete`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesDelete(useCaseId)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | The number of records to skip over. Default 0.
limit <- 100 # integer | The number of records to return in the range from 1 to 100. Default 100.
orderBy <- 'orderBy_example' # character | Sort the use cases by a field of the use case.
namePart <- 'namePart_example' # character | Only return use cases with names that match the given string.
stage <- 'stage_example' # character | Filter results by the current stage of the use cases.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesList(offset=offset, limit=limit, orderBy=orderBy, namePart=namePart, stage=stage)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesPatch`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
useCaseUpdate <- UseCaseUpdate$new() # UseCaseUpdate |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesPatch(useCaseId, useCaseUpdate=useCaseUpdate)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesRealizedValueOverTimeList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The ID of the use case
start <- 'start_example' # character | RFC3339 datetime. Start of time period to retrieve the features drift for. If not set, defaults to 1 week from the end of the period.Note: this field only accepts top of the hour RFC3339 datetime strings For example: ``2019-08-01T00:00:00Z``.
end <- 'end_example' # character | RFC3339 datetime. End of time period to retrieve the features drift for. If not set, defaults to the next top of the hour from now.Note: this field only accepts top of the hour RFC3339 datetime strings For example: ``2019-08-01T00:00:00Z``.
bucketSize <- 'bucketSize_example' # character | The time duration of a bucket. Needs to be multiple of one hour. Can not be longer than the total length of the period. If not set, a default value will be calculated based on the start and end time.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesRealizedValueOverTimeList(useCaseId, start=start, end=end, bucketSize=bucketSize)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesRetrieve`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesRetrieve(useCaseId)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesSharedRolesList`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | This many results will be skipped
limit <- 10 # integer | At most this many results are returned
useCaseId <- 'useCaseId_example' # character | The ID of the use case
id <- 'id_example' # character | Only return roles for a user, group or organization with this identifier.
name <- 'name_example' # character | Only return roles for a user, group or organization with this name.
shareRecipientType <- 'shareRecipientType_example' # character | List access controls for recipients with this type.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesSharedRolesList(offset, limit, useCaseId, id=id, name=name, shareRecipientType=shareRecipientType)
}

## ------------------------------------------------
## Method `UseCaseApi$UseCasesSharedRolesPatchMany`
## ------------------------------------------------

\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The ID of the use case
useCaseSharingUpdate <- UseCaseSharingUpdate$new() # UseCaseSharingUpdate |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesSharedRolesPatchMany(useCaseId, useCaseSharingUpdate=useCaseSharingUpdate)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{UseCaseApi$new()}}
\item \href{#method-UseCaseValueTemplatesCalculationList}{\code{UseCaseApi$UseCaseValueTemplatesCalculationList()}}
\item \href{#method-UseCaseValueTemplatesList}{\code{UseCaseApi$UseCaseValueTemplatesList()}}
\item \href{#method-UseCaseValueTemplatesRetrieve}{\code{UseCaseApi$UseCaseValueTemplatesRetrieve()}}
\item \href{#method-UseCasesActivitiesList}{\code{UseCaseApi$UseCasesActivitiesList()}}
\item \href{#method-UseCasesAttachmentsCreate}{\code{UseCaseApi$UseCasesAttachmentsCreate()}}
\item \href{#method-UseCasesAttachmentsDelete}{\code{UseCaseApi$UseCasesAttachmentsDelete()}}
\item \href{#method-UseCasesAttachmentsList}{\code{UseCaseApi$UseCasesAttachmentsList()}}
\item \href{#method-UseCasesAttachmentsRetrieve}{\code{UseCaseApi$UseCasesAttachmentsRetrieve()}}
\item \href{#method-UseCasesCreate}{\code{UseCaseApi$UseCasesCreate()}}
\item \href{#method-UseCasesDelete}{\code{UseCaseApi$UseCasesDelete()}}
\item \href{#method-UseCasesList}{\code{UseCaseApi$UseCasesList()}}
\item \href{#method-UseCasesPatch}{\code{UseCaseApi$UseCasesPatch()}}
\item \href{#method-UseCasesRealizedValueOverTimeList}{\code{UseCaseApi$UseCasesRealizedValueOverTimeList()}}
\item \href{#method-UseCasesRetrieve}{\code{UseCaseApi$UseCasesRetrieve()}}
\item \href{#method-UseCasesSharedRolesList}{\code{UseCaseApi$UseCasesSharedRolesList()}}
\item \href{#method-UseCasesSharedRolesPatchMany}{\code{UseCaseApi$UseCasesSharedRolesPatchMany()}}
\item \href{#method-clone}{\code{UseCaseApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$new(apiClient)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{apiClient}}{A configurable \code{ApiClient} instance. If none provided, a new client with default configuration will be created.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCaseValueTemplatesCalculationList"></a>}}
\if{latex}{\out{\hypertarget{method-UseCaseValueTemplatesCalculationList}{}}}
\subsection{Method \code{UseCaseValueTemplatesCalculationList()}}{
Calculate value of template with given template parameters.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCaseValueTemplatesCalculationList(
  accuracyImprovement,
  decisionsCount,
  templateType,
  incorrectDecisionsCount = NULL,
  incorrectDecisionCost = NULL,
  targetValue = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accuracyImprovement}}{numeric. Accuracy improvement}

\item{\code{decisionsCount}}{integer. Estimated number of decisions per year}

\item{\code{templateType}}{Enum < \link{classification, regression} > The name of the use case value template to be retrieved}

\item{\code{incorrectDecisionsCount}}{integer. Estimated number of incorrect decisions per year. Required for templateType CLASSIFICATION}

\item{\code{incorrectDecisionCost}}{numeric. Estimated cost of an individual incorrect decision. Required for templateType CLASSIFICATION}

\item{\code{targetValue}}{numeric. Target value. Required for templateType REGRESSION}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Calculate value of template with given template parameters.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
\item \strong{\code{400}} Bad request
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseValueTemplateCalculateResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
accuracyImprovement <- 3.4 # numeric | Accuracy improvement
decisionsCount <- 56 # integer | Estimated number of decisions per year
templateType <- 'templateType_example' # character | The name of the use case value template to be retrieved
incorrectDecisionsCount <- 56 # integer | Estimated number of incorrect decisions per year. Required for templateType CLASSIFICATION
incorrectDecisionCost <- 3.4 # numeric | Estimated cost of an individual incorrect decision. Required for templateType CLASSIFICATION
targetValue <- 3.4 # numeric | Target value. Required for templateType REGRESSION

api.instance <- UseCaseApi$new()
result <- api.instance$UseCaseValueTemplatesCalculationList(accuracyImprovement, decisionsCount, templateType, incorrectDecisionsCount=incorrectDecisionsCount, incorrectDecisionCost=incorrectDecisionCost, targetValue=targetValue)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCaseValueTemplatesList"></a>}}
\if{latex}{\out{\hypertarget{method-UseCaseValueTemplatesList}{}}}
\subsection{Method \code{UseCaseValueTemplatesList()}}{
List available use cases templates.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCaseValueTemplatesList(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
List available use cases templates.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
list( \link{UseCaseValueTemplateResponse} )
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)

api.instance <- UseCaseApi$new()
result <- api.instance$UseCaseValueTemplatesList()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCaseValueTemplatesRetrieve"></a>}}
\if{latex}{\out{\hypertarget{method-UseCaseValueTemplatesRetrieve}{}}}
\subsection{Method \code{UseCaseValueTemplatesRetrieve()}}{
Get an individual use case value template by its name.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCaseValueTemplatesRetrieve(templateType, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{templateType}}{Enum < \link{classification, regression} > The name of the use case value template to be retrieved}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get an individual use case value template by its name.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
\item \strong{\code{400}} Bad request
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseValueTemplateResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
templateType <- 'templateType_example' # character | The name of the use case value template to be retrieved

api.instance <- UseCaseApi$new()
result <- api.instance$UseCaseValueTemplatesRetrieve(templateType)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesActivitiesList"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesActivitiesList}{}}}
\subsection{Method \code{UseCasesActivitiesList()}}{
Retrieve the activities of a use case.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesActivitiesList(useCaseId, offset = 0, limit = 100, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{offset}}{integer. The number of records to skip over. Default 0.}

\item{\code{limit}}{integer. The number of records to return in the range from 1 to 100. Default 100.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Retrieve the activities of a use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseActivityListResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
offset <- 0 # integer | The number of records to skip over. Default 0.
limit <- 100 # integer | The number of records to return in the range from 1 to 100. Default 100.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesActivitiesList(useCaseId, offset=offset, limit=limit)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesAttachmentsCreate"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesAttachmentsCreate}{}}}
\subsection{Method \code{UseCasesAttachmentsCreate()}}{
Attach a list of resources to this use case.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesAttachmentsCreate(
  useCaseId,
  createUseCaseAttachment = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{createUseCaseAttachment}}{\link{CreateUseCaseAttachment}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Attach a list of resources to this use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{201}}
\itemize{
}
\item \strong{\code{404}} Use case or object not found or Use case not writable or object not readable.
\itemize{
}
\item \strong{\code{422}} The request was formatted improperly
\itemize{
}
}
}

\subsection{Returns}{
list( \link{UseCaseAttachment} )
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
createUseCaseAttachment <- CreateUseCaseAttachment$new() # CreateUseCaseAttachment |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsCreate(useCaseId, createUseCaseAttachment=createUseCaseAttachment)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesAttachmentsDelete"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesAttachmentsDelete}{}}}
\subsection{Method \code{UseCasesAttachmentsDelete()}}{
Removes a resource from a use case.
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesAttachmentsDelete(useCaseId, attachmentId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{attachmentId}}{character. The id of the attachment}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Removes a resource from a use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{204}}
\itemize{
}
\item \strong{\code{403}} The user does not have permission to remove objects from this use case
\itemize{
}
\item \strong{\code{404}} Either the use case does not exist or the user does not have permissions to view this use case.
\itemize{
}
\item \strong{\code{422}} The request was formatted improperly, or the requested object to delete was not found
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
attachmentId <- 'attachmentId_example' # character | The id of the attachment

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsDelete(useCaseId, attachmentId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesAttachmentsList"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesAttachmentsList}{}}}
\subsection{Method \code{UseCasesAttachmentsList()}}{
Get a list of resources attached to this use case.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesAttachmentsList(
  useCaseId,
  offset = 0,
  limit = 100,
  type = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{offset}}{integer. This many results will be skipped}

\item{\code{limit}}{integer. This many results are returned}

\item{\code{type}}{Enum < \link{dataset, modelingProject, deployment, customModel, modelPackage, application} > Use case attachment type}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get a list of resources attached to this use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
\item \strong{\code{404}} Either the use case does not exist or the user does not have permissions to view this use case.
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseAttachmentListResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
offset <- 0 # integer | This many results will be skipped
limit <- 100 # integer | This many results are returned
type <- 'type_example' # character | Use case attachment type

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsList(useCaseId, offset=offset, limit=limit, type=type)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesAttachmentsRetrieve"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesAttachmentsRetrieve}{}}}
\subsection{Method \code{UseCasesAttachmentsRetrieve()}}{
Get a resource that is attached to a use case.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesAttachmentsRetrieve(useCaseId, attachmentId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{attachmentId}}{character. The id of the attachment}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get a resource that is attached to a use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
\item \strong{\code{403}} The user does not have permission to attach objects to this use case
\itemize{
}
\item \strong{\code{404}} Either the use case does not exist or the user does not have permissions to view this use case.
\itemize{
}
\item \strong{\code{422}} The request was formatted improperly, or the requested object to attach was not found
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseAttachmentResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
attachmentId <- 'attachmentId_example' # character | The id of the attachment

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesAttachmentsRetrieve(useCaseId, attachmentId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesCreate"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesCreate}{}}}
\subsection{Method \code{UseCasesCreate()}}{
Create a new use case.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesCreate(useCase = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCase}}{\link{UseCase}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Create a new use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseCreateResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCase <- UseCase$new() # UseCase |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesCreate(useCase=useCase)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesDelete"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesDelete}{}}}
\subsection{Method \code{UseCasesDelete()}}{
Delete a use case
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesDelete(useCaseId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Delete a use case


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
\item \strong{\code{204}} The use case was deleted
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesDelete(useCaseId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesList"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesList}{}}}
\subsection{Method \code{UseCasesList()}}{
List use cases the requesting user has access to.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesList(
  offset = 0,
  limit = 100,
  orderBy = NULL,
  namePart = NULL,
  stage = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{integer. The number of records to skip over. Default 0.}

\item{\code{limit}}{integer. The number of records to return in the range from 1 to 100. Default 100.}

\item{\code{orderBy}}{Enum < \link{businessImpact, -businessImpact, potentialValue, -potentialValue, realizedValue, -realizedValue, feasibility, -feasibility, stage, -stage} > Sort the use cases by a field of the use case.}

\item{\code{namePart}}{character. Only return use cases with names that match the given string.}

\item{\code{stage}}{Enum < \link{ideation, queued, dataPrepAndModeling, validatingAndDeploying, inProduction, retired, onHold} > Filter results by the current stage of the use cases.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
List use cases the requesting user has access to.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseListResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | The number of records to skip over. Default 0.
limit <- 100 # integer | The number of records to return in the range from 1 to 100. Default 100.
orderBy <- 'orderBy_example' # character | Sort the use cases by a field of the use case.
namePart <- 'namePart_example' # character | Only return use cases with names that match the given string.
stage <- 'stage_example' # character | Filter results by the current stage of the use cases.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesList(offset=offset, limit=limit, orderBy=orderBy, namePart=namePart, stage=stage)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesPatch"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesPatch}{}}}
\subsection{Method \code{UseCasesPatch()}}{
Update a use case.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesPatch(useCaseId, useCaseUpdate = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{useCaseUpdate}}{\link{UseCaseUpdate}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Update a use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case
useCaseUpdate <- UseCaseUpdate$new() # UseCaseUpdate |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesPatch(useCaseId, useCaseUpdate=useCaseUpdate)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesRealizedValueOverTimeList"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesRealizedValueOverTimeList}{}}}
\subsection{Method \code{UseCasesRealizedValueOverTimeList()}}{
Retrieve realized value information for a given use case over a period of time
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesRealizedValueOverTimeList(
  useCaseId,
  start = NULL,
  end = NULL,
  bucketSize = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The ID of the use case}

\item{\code{start}}{character. RFC3339 datetime. Start of time period to retrieve the features drift for. If not set, defaults to 1 week from the end of the period.Note: this field only accepts top of the hour RFC3339 datetime strings For example: ``2019-08-01T00:00:00Z``.}

\item{\code{end}}{character. RFC3339 datetime. End of time period to retrieve the features drift for. If not set, defaults to the next top of the hour from now.Note: this field only accepts top of the hour RFC3339 datetime strings For example: ``2019-08-01T00:00:00Z``.}

\item{\code{bucketSize}}{character. The time duration of a bucket. Needs to be multiple of one hour. Can not be longer than the total length of the period. If not set, a default value will be calculated based on the start and end time.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Retrieve realized value information for a given use case over a period of time


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseRealizedValuesOverTimeResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The ID of the use case
start <- 'start_example' # character | RFC3339 datetime. Start of time period to retrieve the features drift for. If not set, defaults to 1 week from the end of the period.Note: this field only accepts top of the hour RFC3339 datetime strings For example: ``2019-08-01T00:00:00Z``.
end <- 'end_example' # character | RFC3339 datetime. End of time period to retrieve the features drift for. If not set, defaults to the next top of the hour from now.Note: this field only accepts top of the hour RFC3339 datetime strings For example: ``2019-08-01T00:00:00Z``.
bucketSize <- 'bucketSize_example' # character | The time duration of a bucket. Needs to be multiple of one hour. Can not be longer than the total length of the period. If not set, a default value will be calculated based on the start and end time.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesRealizedValueOverTimeList(useCaseId, start=start, end=end, bucketSize=bucketSize)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesRetrieve"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesRetrieve}{}}}
\subsection{Method \code{UseCasesRetrieve()}}{
Retrieve a use case.
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesRetrieve(useCaseId, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The id of the use case}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Retrieve a use case.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The id of the use case

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesRetrieve(useCaseId)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesSharedRolesList"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesSharedRolesList}{}}}
\subsection{Method \code{UseCasesSharedRolesList()}}{
Get a list of users, groups and organizations that have an access to this use case
Produces: "application/json"
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesSharedRolesList(
  offset,
  limit,
  useCaseId,
  id = NULL,
  name = NULL,
  shareRecipientType = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{integer. This many results will be skipped}

\item{\code{limit}}{integer. At most this many results are returned}

\item{\code{useCaseId}}{character. The ID of the use case}

\item{\code{id}}{character. Only return roles for a user, group or organization with this identifier.}

\item{\code{name}}{character. Only return roles for a user, group or organization with this name.}

\item{\code{shareRecipientType}}{Enum < \link{user, group, organization} > List access controls for recipients with this type.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get a list of users, groups and organizations that have an access to this use case


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
}
}

\subsection{Returns}{
\link{UseCaseSharingListResponse}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
offset <- 0 # integer | This many results will be skipped
limit <- 10 # integer | At most this many results are returned
useCaseId <- 'useCaseId_example' # character | The ID of the use case
id <- 'id_example' # character | Only return roles for a user, group or organization with this identifier.
name <- 'name_example' # character | Only return roles for a user, group or organization with this name.
shareRecipientType <- 'shareRecipientType_example' # character | List access controls for recipients with this type.

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesSharedRolesList(offset, limit, useCaseId, id=id, name=name, shareRecipientType=shareRecipientType)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UseCasesSharedRolesPatchMany"></a>}}
\if{latex}{\out{\hypertarget{method-UseCasesSharedRolesPatchMany}{}}}
\subsection{Method \code{UseCasesSharedRolesPatchMany()}}{
Share a use case with a user, group or organization.
Produces: NA
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$UseCasesSharedRolesPatchMany(
  useCaseId,
  useCaseSharingUpdate = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useCaseId}}{character. The ID of the use case}

\item{\code{useCaseSharingUpdate}}{\link{UseCaseSharingUpdate}.}

\item{\code{...}}{Optional. Additional named parameters to be passed downward.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Share a use case with a user, group or organization.


Response status codes, messages, and headers:
\itemize{
\item \strong{\code{200}}
\itemize{
}
\item \strong{\code{204}} The roles updated successfully
\itemize{
}
\item \strong{\code{422}} The request was formatted improperly
\itemize{
}
}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
library(datarobot.apicore)
useCaseId <- 'useCaseId_example' # character | The ID of the use case
useCaseSharingUpdate <- UseCaseSharingUpdate$new() # UseCaseSharingUpdate |

api.instance <- UseCaseApi$new()
result <- api.instance$UseCasesSharedRolesPatchMany(useCaseId, useCaseSharingUpdate=useCaseSharingUpdate)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UseCaseApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
