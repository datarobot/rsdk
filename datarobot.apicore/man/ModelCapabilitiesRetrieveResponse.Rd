% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_capabilities_retrieve_response.R
\docType{class}
\name{ModelCapabilitiesRetrieveResponse}
\alias{ModelCapabilitiesRetrieveResponse}
\title{ModelCapabilitiesRetrieveResponse}
\format{
An \code{R6Class} generator object
}
\description{
ModelCapabilitiesRetrieveResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{eligibleForPrime}}{character `True` if the model is eligible for prime. Use :http:get:`/api/v2/projects/(projectId)/models/(modelId)/primeInfo/` to request additional details if the model is not eligible.}

\item{\code{hasParameters}}{character `True` if the model has parameters that can be retrieved. Use :http:get:`/api/v2/projects/(projectId)/models/(modelId)/parameters/` to retrieve the model parameters.}

\item{\code{hasWordCloud}}{character True` if the model has word cloud data available. Use :http:get:`/api/v2/projects/(projectId)/models/(modelId)/wordCloud/` to retrieve a word cloud.}

\item{\code{reasons}}{\link{Reasons} \link{optional}}

\item{\code{supportsBlending}}{character `True` if the model supports blending. See :http:post:`/api/v2/projects/(projectId)/blenderModels/blendCheck/` to check specific blending combinations.}

\item{\code{supportsCodeGeneration}}{character `True` if the model supports export of model's source code or compiled Java executable.}

\item{\code{supportsEarlyStopping}}{character \link{optional} `True` if this is an early stopping tree-based model and number of trained iterations can be retrieved.}

\item{\code{supportsImageActivationMaps}}{character `True` if the model has image column(s) and activation maps can be generated.}

\item{\code{supportsImageEmbedding}}{character `True` if the model has image column(s) and image embeddings can be generated.}

\item{\code{supportsModelPackageExport}}{character \link{optional} `True` if the model can be exported as a model package.}

\item{\code{supportsModelTrainingMetrics}}{character When `True` , the model will track and save key training metrics in an effort to communicate model accuracy throughout training, rather than at training completion.}

\item{\code{supportsMonotonicConstraints}}{character `True` if the model supports monotonic  constraints.}

\item{\code{supportsNNVisualizations}}{character `True` if the model supports neuralNetworkVisualizations.}

\item{\code{supportsShap}}{character `True` if the model supports Shapley package. i.e. Shapley based feature Importance}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ModelCapabilitiesRetrieveResponse$new()}}
\item \href{#method-validate}{\code{ModelCapabilitiesRetrieveResponse$validate()}}
\item \href{#method-toJSON}{\code{ModelCapabilitiesRetrieveResponse$toJSON()}}
\item \href{#method-fromJSON}{\code{ModelCapabilitiesRetrieveResponse$fromJSON()}}
\item \href{#method-clone}{\code{ModelCapabilitiesRetrieveResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCapabilitiesRetrieveResponse$new(
  eligibleForPrime = NULL,
  hasParameters = NULL,
  hasWordCloud = NULL,
  supportsBlending = NULL,
  supportsCodeGeneration = NULL,
  supportsImageActivationMaps = NULL,
  supportsImageEmbedding = NULL,
  supportsModelTrainingMetrics = NULL,
  supportsMonotonicConstraints = NULL,
  supportsNNVisualizations = NULL,
  supportsShap = NULL,
  reasons = NULL,
  supportsEarlyStopping = NULL,
  supportsModelPackageExport = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eligibleForPrime}}{`True` if the model is eligible for prime. Use :http:get:`/api/v2/projects/(projectId)/models/(modelId)/primeInfo/` to request additional details if the model is not eligible.}

\item{\code{hasParameters}}{`True` if the model has parameters that can be retrieved. Use :http:get:`/api/v2/projects/(projectId)/models/(modelId)/parameters/` to retrieve the model parameters.}

\item{\code{hasWordCloud}}{True` if the model has word cloud data available. Use :http:get:`/api/v2/projects/(projectId)/models/(modelId)/wordCloud/` to retrieve a word cloud.}

\item{\code{supportsBlending}}{`True` if the model supports blending. See :http:post:`/api/v2/projects/(projectId)/blenderModels/blendCheck/` to check specific blending combinations.}

\item{\code{supportsCodeGeneration}}{`True` if the model supports export of model's source code or compiled Java executable.}

\item{\code{supportsImageActivationMaps}}{`True` if the model has image column(s) and activation maps can be generated.}

\item{\code{supportsImageEmbedding}}{`True` if the model has image column(s) and image embeddings can be generated.}

\item{\code{supportsModelTrainingMetrics}}{When `True` , the model will track and save key training metrics in an effort to communicate model accuracy throughout training, rather than at training completion.}

\item{\code{supportsMonotonicConstraints}}{`True` if the model supports monotonic  constraints.}

\item{\code{supportsNNVisualizations}}{`True` if the model supports neuralNetworkVisualizations.}

\item{\code{supportsShap}}{`True` if the model supports Shapley package. i.e. Shapley based feature Importance}

\item{\code{supportsEarlyStopping}}{`True` if this is an early stopping tree-based model and number of trained iterations can be retrieved.}

\item{\code{supportsModelPackageExport}}{`True` if the model can be exported as a model package.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCapabilitiesRetrieveResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCapabilitiesRetrieveResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCapabilitiesRetrieveResponse$fromJSON(
  ModelCapabilitiesRetrieveResponseJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ModelCapabilitiesRetrieveResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelCapabilitiesRetrieveResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
