% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solution_response.R
\docType{class}
\name{SolutionResponse}
\alias{SolutionResponse}
\title{SolutionResponse}
\format{
An \code{R6Class} generator object
}
\description{
SolutionResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{bestModel}}{character True if this solution generates the best model.}

\item{\code{complexity}}{integer The complexity score for this solution. Complexity score is a function of the mathematical operators used in the current solution. The complexity calculation can be tuned via model hyperparameters.}

\item{\code{error}}{numeric The error for the current solution, as computed by eureqa using the `errorMetric` error metric. None if Eureqa model refitted existing solutions.}

\item{\code{eureqaSolutionId}}{character The ID of the solution.}

\item{\code{expression}}{character The eureqa \"solution string\". This is a mathematical expression; human-readable but with strict syntax specifications defined by Eureqa.}

\item{\code{expressionAnnotated}}{character The `expression`, rendered with additional tags to assist in automatic parsing.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SolutionResponse-new}{\code{SolutionResponse$new()}}
\item \href{#method-SolutionResponse-validate}{\code{SolutionResponse$validate()}}
\item \href{#method-SolutionResponse-toJSON}{\code{SolutionResponse$toJSON()}}
\item \href{#method-SolutionResponse-fromJSON}{\code{SolutionResponse$fromJSON()}}
\item \href{#method-SolutionResponse-clone}{\code{SolutionResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolutionResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-SolutionResponse-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolutionResponse$new(
  bestModel = NULL,
  complexity = NULL,
  error = NULL,
  eureqaSolutionId = NULL,
  expression = NULL,
  expressionAnnotated = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bestModel}}{True if this solution generates the best model.}

\item{\code{complexity}}{The complexity score for this solution. Complexity score is a function of the mathematical operators used in the current solution. The complexity calculation can be tuned via model hyperparameters.}

\item{\code{error}}{The error for the current solution, as computed by eureqa using the `errorMetric` error metric. None if Eureqa model refitted existing solutions.}

\item{\code{eureqaSolutionId}}{The ID of the solution.}

\item{\code{expression}}{The eureqa \"solution string\". This is a mathematical expression; human-readable but with strict syntax specifications defined by Eureqa.}

\item{\code{expressionAnnotated}}{The `expression`, rendered with additional tags to assist in automatic parsing.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolutionResponse-validate"></a>}}
\if{latex}{\out{\hypertarget{method-SolutionResponse-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolutionResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolutionResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SolutionResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolutionResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolutionResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-SolutionResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolutionResponse$fromJSON(SolutionResponseJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{SolutionResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SolutionResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SolutionResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SolutionResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
