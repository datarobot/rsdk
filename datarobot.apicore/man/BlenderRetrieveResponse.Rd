% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blender_retrieve_response.R
\docType{class}
\name{BlenderRetrieveResponse}
\alias{BlenderRetrieveResponse}
\title{BlenderRetrieveResponse}
\format{
An \code{R6Class} generator object
}
\description{
BlenderRetrieveResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{blenderMethod}}{character Method used to blend results of underlying models.}

\item{\code{blueprintId}}{character the blueprint used to construct the model}

\item{\code{featurelistId}}{character the ID of the featurelist used by the model}

\item{\code{featurelistName}}{character the name of the featurelist used by the model.If null, the model was trained on multiple feature lists.}

\item{\code{id}}{character the ID of the model}

\item{\code{isFrozen}}{character indicating whether the model is frozen, i.e. uses tuning parameters from a parent model}

\item{\code{isStarred}}{character whether the model has been starred}

\item{\code{linkFunction}}{character the link function the final modeler uses in the blueprint. If no link function exists, returns null}

\item{\code{metrics}}{object the performance of the model according to various metrics, where each metric has validation, crossValidation, holdout, and training scores reported, or null if they have not been computed.}

\item{\code{modelCategory}}{character indicates what kind of model it is - will be `prime` for DataRobot Prime models, `blend` for blender models, and `model` for all other models}

\item{\code{modelFamily}}{character the family model belongs to, e.g. SVM, GMB, etc.}

\item{\code{modelIds}}{list( character ) List of models used in blender.}

\item{\code{modelNumber}}{integer The model number from the leaderboard.}

\item{\code{modelType}}{character identifies the model, e.g. `Nystroem Kernel SVM Regressor`}

\item{\code{monotonicDecreasingFeaturelistId}}{character the ID of the featurelist that defines the set of features with a monotonically decreasing relationship to the target. If null, no such constraints are enforced.}

\item{\code{monotonicIncreasingFeaturelistId}}{character the ID of the featurelist that defines the set of features with a monotonically increasing relationship to the target. If null, no such constraints are enforced.}

\item{\code{parentModelId}}{character if this model is frozen, this is the ID of the parent model. Otherwise Null.}

\item{\code{predictionThreshold}}{numeric threshold used for binary classification in predictions.}

\item{\code{predictionThresholdReadOnly}}{character indicates whether modification of a predictions threshold is forbidden. Since v2.22 threshold modification is allowed.}

\item{\code{processes}}{list( character ) list of processes used by the model}

\item{\code{projectId}}{character the ID of the project to which the model belongs}

\item{\code{samplePct}}{numeric the percentage of the dataset used in training the model}

\item{\code{supportsComposableMl}}{character indicates whether this model is supported in Composable ML.}

\item{\code{supportsMonotonicConstraints}}{character whether this model supports enforcing monotonic constraints}

\item{\code{trainingDuration}}{character the duration spanned by the dates in the partition column for the data used to train the model}

\item{\code{trainingEndDate}}{character the end date of the dates in the partition column for the data used to train the model}

\item{\code{trainingRowCount}}{integer The number of rows used to train the model.}

\item{\code{trainingStartDate}}{character the start date of the dates in the partition column for the data used to train the model}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BlenderRetrieveResponse-new}{\code{BlenderRetrieveResponse$new()}}
\item \href{#method-BlenderRetrieveResponse-validate}{\code{BlenderRetrieveResponse$validate()}}
\item \href{#method-BlenderRetrieveResponse-toJSON}{\code{BlenderRetrieveResponse$toJSON()}}
\item \href{#method-BlenderRetrieveResponse-fromJSON}{\code{BlenderRetrieveResponse$fromJSON()}}
\item \href{#method-BlenderRetrieveResponse-clone}{\code{BlenderRetrieveResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlenderRetrieveResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-BlenderRetrieveResponse-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlenderRetrieveResponse$new(
  blenderMethod = NULL,
  blueprintId = NULL,
  featurelistId = NULL,
  featurelistName = NULL,
  id = NULL,
  isFrozen = NULL,
  isStarred = NULL,
  linkFunction = NULL,
  metrics = NULL,
  modelCategory = NULL,
  modelFamily = NULL,
  modelIds = NULL,
  modelNumber = NULL,
  modelType = NULL,
  monotonicDecreasingFeaturelistId = NULL,
  monotonicIncreasingFeaturelistId = NULL,
  parentModelId = NULL,
  predictionThreshold = NULL,
  predictionThresholdReadOnly = NULL,
  processes = NULL,
  projectId = NULL,
  samplePct = NULL,
  supportsComposableMl = NULL,
  supportsMonotonicConstraints = NULL,
  trainingDuration = NULL,
  trainingEndDate = NULL,
  trainingRowCount = NULL,
  trainingStartDate = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{blenderMethod}}{Method used to blend results of underlying models.}

\item{\code{blueprintId}}{the blueprint used to construct the model}

\item{\code{featurelistId}}{the ID of the featurelist used by the model}

\item{\code{featurelistName}}{the name of the featurelist used by the model.If null, the model was trained on multiple feature lists.}

\item{\code{id}}{the ID of the model}

\item{\code{isFrozen}}{indicating whether the model is frozen, i.e. uses tuning parameters from a parent model}

\item{\code{isStarred}}{whether the model has been starred}

\item{\code{linkFunction}}{the link function the final modeler uses in the blueprint. If no link function exists, returns null}

\item{\code{metrics}}{the performance of the model according to various metrics, where each metric has validation, crossValidation, holdout, and training scores reported, or null if they have not been computed.}

\item{\code{modelCategory}}{indicates what kind of model it is - will be `prime` for DataRobot Prime models, `blend` for blender models, and `model` for all other models}

\item{\code{modelFamily}}{the family model belongs to, e.g. SVM, GMB, etc.}

\item{\code{modelIds}}{List of models used in blender.}

\item{\code{modelNumber}}{The model number from the leaderboard.}

\item{\code{modelType}}{identifies the model, e.g. `Nystroem Kernel SVM Regressor`}

\item{\code{monotonicDecreasingFeaturelistId}}{the ID of the featurelist that defines the set of features with a monotonically decreasing relationship to the target. If null, no such constraints are enforced.}

\item{\code{monotonicIncreasingFeaturelistId}}{the ID of the featurelist that defines the set of features with a monotonically increasing relationship to the target. If null, no such constraints are enforced.}

\item{\code{parentModelId}}{if this model is frozen, this is the ID of the parent model. Otherwise Null.}

\item{\code{predictionThreshold}}{threshold used for binary classification in predictions.}

\item{\code{predictionThresholdReadOnly}}{indicates whether modification of a predictions threshold is forbidden. Since v2.22 threshold modification is allowed.}

\item{\code{processes}}{list of processes used by the model}

\item{\code{projectId}}{the ID of the project to which the model belongs}

\item{\code{samplePct}}{the percentage of the dataset used in training the model}

\item{\code{supportsComposableMl}}{indicates whether this model is supported in Composable ML.}

\item{\code{supportsMonotonicConstraints}}{whether this model supports enforcing monotonic constraints}

\item{\code{trainingDuration}}{the duration spanned by the dates in the partition column for the data used to train the model}

\item{\code{trainingEndDate}}{the end date of the dates in the partition column for the data used to train the model}

\item{\code{trainingRowCount}}{The number of rows used to train the model.}

\item{\code{trainingStartDate}}{the start date of the dates in the partition column for the data used to train the model}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlenderRetrieveResponse-validate"></a>}}
\if{latex}{\out{\hypertarget{method-BlenderRetrieveResponse-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
checking this objects set properties.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlenderRetrieveResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlenderRetrieveResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-BlenderRetrieveResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlenderRetrieveResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlenderRetrieveResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-BlenderRetrieveResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlenderRetrieveResponse$fromJSON(
  BlenderRetrieveResponseJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{BlenderRetrieveResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BlenderRetrieveResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BlenderRetrieveResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BlenderRetrieveResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
