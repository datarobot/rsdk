% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/section_user.R
\docType{class}
\name{SectionUser}
\alias{SectionUser}
\title{SectionUser}
\format{
An \code{R6Class} generator object
}
\description{
SectionUser Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{description}}{character \link{optional} Section description}

\item{\code{highlightedText}}{character Highlighted text of the section, optionally separated by ``\\n`` to split paragraphs.}

\item{\code{instructions}}{\link{InstructionsField} \link{optional}}

\item{\code{locked}}{character \link{optional} Locked section flag}

\item{\code{regularText}}{character Regular text of the section, optionally separated by ``\\n`` to split paragraphs.}

\item{\code{sections}}{list( object ) \link{optional} List of section objects representing the structure of the document. Each section can have sub-sections that have the same schema as the parent section, e.g. the structure is recursive. The limit of nesting sections is 5. Total number of sections is limited to 500.}

\item{\code{title}}{character Section Title}

\item{\code{type}}{character Section with user-defined content. Those sections may contain text generated by the user.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SectionUser$new()}}
\item \href{#method-validate}{\code{SectionUser$validate()}}
\item \href{#method-toJSON}{\code{SectionUser$toJSON()}}
\item \href{#method-fromJSON}{\code{SectionUser$fromJSON()}}
\item \href{#method-clone}{\code{SectionUser$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SectionUser$new(
  highlightedText = NULL,
  regularText = NULL,
  title = NULL,
  type = NULL,
  description = NULL,
  instructions = NULL,
  locked = NULL,
  sections = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{highlightedText}}{Highlighted text of the section, optionally separated by ``\\n`` to split paragraphs.}

\item{\code{regularText}}{Regular text of the section, optionally separated by ``\\n`` to split paragraphs.}

\item{\code{title}}{Section Title}

\item{\code{type}}{Section with user-defined content. Those sections may contain text generated by the user.}

\item{\code{description}}{Section description}

\item{\code{locked}}{Locked section flag}

\item{\code{sections}}{List of section objects representing the structure of the document. Each section can have sub-sections that have the same schema as the parent section, e.g. the structure is recursive. The limit of nesting sections is 5. Total number of sections is limited to 500.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SectionUser$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SectionUser$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SectionUser$fromJSON(SectionUserJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{SectionUserJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SectionUser$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
