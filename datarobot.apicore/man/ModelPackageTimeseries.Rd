% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_package_timeseries.R
\docType{class}
\name{ModelPackageTimeseries}
\alias{ModelPackageTimeseries}
\title{ModelPackageTimeseries}
\format{
An \code{R6Class} generator object
}
\description{
ModelPackageTimeseries Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{datetimeColumnFormat}}{character Date format for forecast date and forecast point column}

\item{\code{datetimeColumnName}}{character Name of the forecast date column}

\item{\code{effectiveFeatureDerivationWindowEnd}}{integer Same concept as `featureDerivationWindowEnd` which is chosen by the user and based on the initial sampled data from the eda sample. When the dataset goes through aim, the pipeline reads the full dataset and figures out the \"real\" FDW (i.e., the effective FDW). For most models, eFDW is approximately the same as the FDW.}

\item{\code{effectiveFeatureDerivationWindowStart}}{integer Same concept as `featureDerivationWindowStart` which is chosen by the user and based on the initial sampled data from the eda sample. When the dataset goes through aim, the pipeline reads the full dataset and figures out the \"real\" FDW (i.e., the effective FDW). For most models, eFDW is approximately the same as the FDW.}

\item{\code{featureDerivationWindowEnd}}{integer Negative number or zero defining how many time units of the forecast distances time unit into the past relative to the forecast point the feature derivation window should end.}

\item{\code{featureDerivationWindowStart}}{integer Negative number or zero defining how many time units of the forecast distances time unit into the past relative to the forecast point the feature derivation window should begin.}

\item{\code{forecastDistanceColumnName}}{character Name of the forecast distance column}

\item{\code{forecastDistances}}{list( integer ) List of integer forecast distances}

\item{\code{forecastDistancesTimeUnit}}{character The time unit of forecast distances}

\item{\code{forecastPointColumnName}}{character Name of the forecast point column}

\item{\code{isCrossSeries}}{character true if the model is cross-series.}

\item{\code{isNewSeriesSupport}}{character true if the model is optimized to support new series.}

\item{\code{isTraditionalTimeSeries}}{character true if the model is traditional time series.}

\item{\code{seriesColumnName}}{character Name of the series column in case of multi-series date}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ModelPackageTimeseries$new()}}
\item \href{#method-validate}{\code{ModelPackageTimeseries$validate()}}
\item \href{#method-toJSON}{\code{ModelPackageTimeseries$toJSON()}}
\item \href{#method-fromJSON}{\code{ModelPackageTimeseries$fromJSON()}}
\item \href{#method-clone}{\code{ModelPackageTimeseries$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelPackageTimeseries$new(
  datetimeColumnFormat = NULL,
  datetimeColumnName = NULL,
  effectiveFeatureDerivationWindowEnd = NULL,
  effectiveFeatureDerivationWindowStart = NULL,
  featureDerivationWindowEnd = NULL,
  featureDerivationWindowStart = NULL,
  forecastDistanceColumnName = NULL,
  forecastDistances = NULL,
  forecastDistancesTimeUnit = NULL,
  forecastPointColumnName = NULL,
  isCrossSeries = NULL,
  isNewSeriesSupport = NULL,
  isTraditionalTimeSeries = NULL,
  seriesColumnName = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{datetimeColumnFormat}}{Date format for forecast date and forecast point column}

\item{\code{datetimeColumnName}}{Name of the forecast date column}

\item{\code{effectiveFeatureDerivationWindowEnd}}{Same concept as `featureDerivationWindowEnd` which is chosen by the user and based on the initial sampled data from the eda sample. When the dataset goes through aim, the pipeline reads the full dataset and figures out the \"real\" FDW (i.e., the effective FDW). For most models, eFDW is approximately the same as the FDW.}

\item{\code{effectiveFeatureDerivationWindowStart}}{Same concept as `featureDerivationWindowStart` which is chosen by the user and based on the initial sampled data from the eda sample. When the dataset goes through aim, the pipeline reads the full dataset and figures out the \"real\" FDW (i.e., the effective FDW). For most models, eFDW is approximately the same as the FDW.}

\item{\code{featureDerivationWindowEnd}}{Negative number or zero defining how many time units of the forecast distances time unit into the past relative to the forecast point the feature derivation window should end.}

\item{\code{featureDerivationWindowStart}}{Negative number or zero defining how many time units of the forecast distances time unit into the past relative to the forecast point the feature derivation window should begin.}

\item{\code{forecastDistanceColumnName}}{Name of the forecast distance column}

\item{\code{forecastDistances}}{List of integer forecast distances}

\item{\code{forecastDistancesTimeUnit}}{The time unit of forecast distances}

\item{\code{forecastPointColumnName}}{Name of the forecast point column}

\item{\code{isCrossSeries}}{true if the model is cross-series.}

\item{\code{isNewSeriesSupport}}{true if the model is optimized to support new series.}

\item{\code{isTraditionalTimeSeries}}{true if the model is traditional time series.}

\item{\code{seriesColumnName}}{Name of the series column in case of multi-series date}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelPackageTimeseries$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelPackageTimeseries$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelPackageTimeseries$fromJSON(
  ModelPackageTimeseriesJson,
  validateParams = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ModelPackageTimeseriesJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ModelPackageTimeseries$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
