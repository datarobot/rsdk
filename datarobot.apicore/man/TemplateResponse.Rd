% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/template_response.R
\docType{class}
\name{TemplateResponse}
\alias{TemplateResponse}
\title{TemplateResponse}
\format{
An \code{R6Class} generator object
}
\description{
TemplateResponse Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{creatorId}}{character The ID of the user who created the template}

\item{\code{creatorUsername}}{character The username of the user who created the template}

\item{\code{dateModified}}{character Last date/time of template modification.}

\item{\code{description}}{character An overview of the template}

\item{\code{id}}{character The ID of the template accessible by the user}

\item{\code{instructions}}{character Currently always returns ``null``. Maintained as a placeholder for future functionality.}

\item{\code{labels}}{list( character ) User-added filtering labels for the template}

\item{\code{name}}{character The name of the template}

\item{\code{orgId}}{character The ID of the organization the user who created the template belongs to}

\item{\code{permissions}}{\link{TemplatePermissionsResponse}}

\item{\code{projectType}}{character Type of project template.}

\item{\code{sections}}{list( \link{OneOfSectionDataRobotSectionUserSectionCustomSectionTableOfContents} ) List of section objects representing the structure of the document. Each section can have sub-sections that have the same schema as the parent section, i.e., the structure is recursive. The number of nested sections allowed is 5. The total number of sections allowed is 500.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TemplateResponse$new()}}
\item \href{#method-validate}{\code{TemplateResponse$validate()}}
\item \href{#method-toJSON}{\code{TemplateResponse$toJSON()}}
\item \href{#method-fromJSON}{\code{TemplateResponse$fromJSON()}}
\item \href{#method-clone}{\code{TemplateResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A function used to initialize an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateResponse$new(
  creatorId = NULL,
  creatorUsername = NULL,
  dateModified = NULL,
  description = NULL,
  id = NULL,
  instructions = NULL,
  labels = NULL,
  name = NULL,
  orgId = NULL,
  permissions = NULL,
  projectType = NULL,
  sections = NULL,
  validateParams = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{creatorId}}{The ID of the user who created the template}

\item{\code{creatorUsername}}{The username of the user who created the template}

\item{\code{dateModified}}{Last date/time of template modification.}

\item{\code{description}}{An overview of the template}

\item{\code{id}}{The ID of the template accessible by the user}

\item{\code{instructions}}{Currently always returns ``null``. Maintained as a placeholder for future functionality.}

\item{\code{labels}}{User-added filtering labels for the template}

\item{\code{name}}{The name of the template}

\item{\code{orgId}}{The ID of the organization the user who created the template belongs to}

\item{\code{projectType}}{Type of project template.}

\item{\code{sections}}{List of section objects representing the structure of the document. Each section can have sub-sections that have the same schema as the parent section, i.e., the structure is recursive. The number of nested sections allowed is 5. The total number of sections allowed is 500.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters before initialization. Default FALSE.}

\item{\code{...}}{Any additional keyword arguments to be passed into this object for initialization.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate"></a>}}
\if{latex}{\out{\hypertarget{method-validate}{}}}
\subsection{Method \code{validate()}}{
A helper function that provides public access to the private validateProps function. This allows users the ability
to programmatically validate objects before sending them to DataRobot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateResponse$validate()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
A helper function that serializes this object into a JSON encoded string.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateResponse$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
A helper function that deserializes a JSON string into an instance of this class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateResponse$fromJSON(TemplateResponseJson, validateParams = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{TemplateResponseJson}}{A JSON encoded string representation of a class instance.}

\item{\code{validateParams}}{An optional param for auto validating this object's parameters after deserialization. Default FALSE.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TemplateResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
