% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/projects_apiWrapper.R, R/MultiSeries.R
\name{RequestMultiSeriesDetection}
\alias{RequestMultiSeriesDetection}
\title{RequestMultiSeriesDetection}
\usage{
RequestMultiSeriesDetection(
  project,
  dateColumn,
  multiseriesIdColumns = NULL,
  maxWait = 600,
  ...
)
}
\arguments{
\item{project}{character. Either (1) a character string giving the unique alphanumeric
identifier for the project, or (2) a list containing the element projectId with this
identifier.}

\item{dateColumn}{character. The name of the column containing the date that defines the
time series.}

\item{multiseriesIdColumns}{character. Optional. The Series ID to demarcate the series. If
not specified, DataRobot will attempt to automatically infer the series ID.}

\item{maxWait}{integer. The maximum time (in seconds) to wait for the model job to complete.}

\item{...}{Additional keyword arguments to be passed on to the \code{datarobot.apicore} and \code{httr} libraries.}
}
\value{
A named list which contains:
\itemize{
  \item timeSeriesEligible logical. Whether or not the series is eligible to be used for
    time series.
  \item crossSeriesEligible logical. Whether or not the cross series group by column is
    eligible for cross-series modeling. Will be NULL if no cross series group by column
    is used.
  \item crossSeriesEligibilityReason character. The type of cross series eligibility
    (or ineligibility).
  \item timeUnit character. For time series eligible features, the time unit covered by a
    single time step, e.g. "HOUR", or NULL for features that are not time series eligible.
  \item timeStep integer. Expected difference in time units between rows in the data.
    Will be NULL for features that are not time series eligible.
}
}
\description{
Detect multiseries properties
}
\details{
Analyze relationships between potential partition and multiseries ID columns. Time series projects require that each timestamp have at most one row corresponding to it. However, multiple series of data can be handled within a single project by designating a multiseries ID column that assigns each row to a particular series. See the \verb{multiseries <multiseries>} docs on time series projects for more information. A detection job analyzing the relationship between the multiseries ID column and the datetime partition column must be ran before it can be used. If the desired multiseries ID column(s) are known, it can be specified to limit the analysis to only those columns.

This method invokes \verb{POST /projects/\{projectId\}/multiseriesProperties/} in the DataRobot Public API.

Format a multiseries.

Call this function to request the project be formatted as a multiseries project, with the
\code{dateColumn} specifying the time series.

Note that as of v2.13 this function no longer needs to be called directly, but is called
indirectly as a part of \code{SetTarget} (which itself is called indirectly as part of
\code{StartProject}) when you pass a multiseries partition using
\code{CreateDatetimePartitionSpecification}.
}
\seealso{
The method MultiseriesPropertiesCreate in \link[datarobot.apicore:ProjectsApi]{datarobot.apicore::ProjectsApi}, which invokes the same underlying API endpoint.

Other MultiSeriesProject functions: 
\code{\link{GetMultiSeriesProperties}()},
\code{\link{RequestCrossSeriesDetection}()},
\code{\link{as.dataRobotMultiSeriesProperties}()}
}
\concept{MultiSeriesProject functions}
