% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataEngineQueryGenerator.R
\name{GetDataEngineQueryGenerator}
\alias{GetDataEngineQueryGenerator}
\title{Retrieve a DataEngineQueryGenerator for time series data prep.}
\usage{
GetDataEngineQueryGenerator(generatorId)
}
\arguments{
\item{generatorId}{character. The Id of the query generator to retrieve.}
}
\value{
A query generator object:
\itemize{
\item Id. character. The ID of the created query generator.
\item datasets. list of objects containing elements
\itemize{
\item alias. character. The alias for the dataset used in the query.
\item datasetId. character. The ID of the dataset.
\item datasetVersionId. character. The ID of the dataset version.
}
\item generatorType. character. The type of the query generator.
\item generatorSettings. object containing elements
\itemize{
\item datetimePartitionColumn. character. The name of the date column.
\item timeUnit. character. The unit of the time step.
\item timeStep. integer. The number of units in the time step.
\item defaultNumericAggregationMethod. character. Aggregation for numeric columns.
\item defaultCategoricalAggregationMethod. character. Aggregation for categorical columns.
\item target. character. The name of the target column.
\item multiseriesIdColumns. list of character. Optional. The name of the series id column.
\item defaultTextAggregationMethod. character. Optional. Aggregation for text columns.
\item startFromSeriesMinDatetime. logical. Optional. Whether to use per series start date.
\item endToSeriesMaxDatetime. logical. Optional. Whether to use per series end date.
}
\item query. character. The text of the generated Spark SQL query.
}
}
\description{
Retrieve a DataEngineQueryGenerator for time series data prep.
}
\examples{
\dontrun{
generatorId <- "59a5af20c80891534e3c2bde"
queryGenerator <- GetDataEngineQueryGenerator(generatorId)
}
}
\seealso{
Other Data Engine Query Generator functions: 
\code{\link{CreateDataEngineQueryGenerator}()},
\code{\link{CreateDatasetFromDataEngineQueryGenerator}()}
}
\concept{Data Engine Query Generator functions}
