% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataSources.R, R/data_connectivity_apiWrapper.R
\name{CreateDataSource}
\alias{CreateDataSource}
\title{Create a data source.}
\usage{
CreateDataSource(
  type,
  canonicalName,
  dataStoreId,
  query = NULL,
  table = NULL,
  schema = NULL,
  partitionColumn = NULL,
  fetchSize = NULL,
  ...
)

CreateDataSource(
  type,
  canonicalName,
  dataStoreId,
  query = NULL,
  table = NULL,
  schema = NULL,
  partitionColumn = NULL,
  fetchSize = NULL,
  ...
)
}
\arguments{
\item{type}{character. The type of data source.}

\item{canonicalName}{character. The user-friendly name of the data source.}

\item{dataStoreId}{character. The ID of the data store to connect to.}

\item{query}{character. A query to execute on the data store to get the data. Optional.}

\item{table}{character. The specified database table. Optional.}

\item{schema}{character. The specified database schema. Optional.}

\item{partitionColumn}{character. The name of the partition column. Optional.}

\item{fetchSize}{integer. a user specified fetch size in the range [1, 20000]. Optional.
By default a fetchSize will be assigned to balance throughput and memory usage}
}
\description{
Create a data source.
}
\details{
Create a fully configured source of data which could be used for datasets and projects creation.A `data source` specifies, via SQL query or selected table and schema data, which data to extract from the `data connection` (the location of data within a given endpoint) to use for modeling or predictions. A `data source` has one `data connection` and one `connector` but can have many `datasets`. To test the SQL query before creating the data source,use :http:post:`/api/v2/externalDataStores/(dataStoreId)/verifySQL/`.
}
\examples{
\dontrun{
dataStoreId <- "5c1303269300d900016b41a7"
CreateDataSource(
  type = "jdbc",
  canonicalName = "Airline stats after 1995",
  dataStoreId = dataStoreId,
  query = 'SELECT * FROM airlines10mb WHERE "Year" >= 1995;'
)
}
}
\seealso{
The method ExternalDataSourcesCreate in [datarobot.apicore::DataConnectivityApi], which this function wraps.

Other DataConnectivity: 
\code{\link{CreateDataStore}()},
\code{\link{CreateExternalDataDriverFile}()},
\code{\link{CreateExternalDataDrivers}()},
\code{\link{CreateExternalDataStoresColumns}()},
\code{\link{CreateExternalDataStoresVerifySQL}()},
\code{\link{DeleteDataSource}()},
\code{\link{DeleteDataStore}()},
\code{\link{DeleteExternalDataDrivers}()},
\code{\link{GetDataSource}()},
\code{\link{GetDataStoreSchemas}()},
\code{\link{GetDataStoreTables}()},
\code{\link{GetDataStore}()},
\code{\link{GetDriver}()},
\code{\link{ListDataSources}()},
\code{\link{ListDataStores}()},
\code{\link{ListDrivers}()},
\code{\link{ListExternalDataDriversConfiguration}()},
\code{\link{ListExternalDataSourcesAccessControl}()},
\code{\link{ListExternalDataSourcesPermissions}()},
\code{\link{ListExternalDataSourcesSharedRoles}()},
\code{\link{ListExternalDataStoresCredentials}()},
\code{\link{ListExternalDataStoresPermissions}()},
\code{\link{ListExternalDataStoresSharedRoles}()},
\code{\link{ListExternalDriverConfigurations}()},
\code{\link{PatchExternalDataDrivers}()},
\code{\link{PatchManyExternalDataSourcesAccessControl}()},
\code{\link{PatchManyExternalDataSourcesSharedRoles}()},
\code{\link{PatchManyExternalDataStoresAccessControl}()},
\code{\link{PatchManyExternalDataStoresSharedRoles}()},
\code{\link{RetrieveExternalDriverConfigurations}()},
\code{\link{TestDataStore}()},
\code{\link{UpdateDataSource}()},
\code{\link{UpdateDataStore}()}
}
\concept{DataConnectivity}
